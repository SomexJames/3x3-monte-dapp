{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\src\\\\components\\\\states.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React from \"react\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { GlobalState } from \"./global_states/global_state\";\nimport { Pages } from \"./site_stuff/pages\";\nimport { OnConnect } from \"./updated_states\";\nimport { AccChange } from \"./accChange\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GlobalStateDefault(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState({\n    provider: \"-\",\n    signer: \"-\",\n    signerAddress: \"-\",\n    balance: \"-\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUserInfo = _useState2[0],\n      setCurrentUserInfo = _useState2[1];\n\n  function Connect() {\n    var connectFunction = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var currProvider, signer, signerAddress, updatedStates;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n                _context.next = 3;\n                return currProvider.send(\"eth_requestAccounts\", []);\n\n              case 3:\n                signer = currProvider.getSigner();\n                _context.next = 6;\n                return signer.getAddress();\n\n              case 6:\n                signerAddress = _context.sent;\n                updatedStates = {\n                  provider: currProvider,\n                  signer: signer,\n                  signerAddress: signerAddress,\n                  balance: \"-\"\n                };\n                setCurrentUserInfo(updatedStates);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function connectFunction() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    connectFunction();\n  }\n\n  var globalStateValue = {\n    currentUserInfo: currentUserInfo,\n    setCurrentUserInfo: setCurrentUserInfo,\n    Connect: Connect\n  }; // console.log(currentUserInfo)\n\n  console.log(globalStateValue);\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: globalStateValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalStateDefault, \"La8Qr3Oo9thB738cpBlb1v2P2tk=\");\n\n_c = GlobalStateDefault;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStateDefault\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/states.js"],"names":["React","useState","useEffect","createContext","useContext","useMemo","GlobalState","Pages","OnConnect","AccChange","ethers","GlobalStateDefault","children","provider","signer","signerAddress","balance","currentUserInfo","setCurrentUserInfo","Connect","connectFunction","currProvider","providers","Web3Provider","window","ethereum","send","getSigner","getAddress","updatedStates","globalStateValue","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,OAAO,SAASC,kBAAT,OAA2C;AAAA;;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAEhD,kBAA8CX,QAAQ,CAAC;AACrDY,IAAAA,QAAQ,EAAE,GAD2C;AAErDC,IAAAA,MAAM,EAAE,GAF6C;AAGrDC,IAAAA,aAAa,EAAE,GAHsC;AAIrDC,IAAAA,OAAO,EAAE;AAJ4C,GAAD,CAAtD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AAOA,WAASC,OAAT,GAAmB;AACjB,QAAMC,eAAe;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,gBAAAA,YADc,GACC,IAAIX,MAAM,CAACY,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADD;AAAA;AAAA,uBAEdJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFc;;AAAA;AAGdZ,gBAAAA,MAHc,GAGLO,YAAY,CAACM,SAAb,EAHK;AAAA;AAAA,uBAIQb,MAAM,CAACc,UAAP,EAJR;;AAAA;AAIdb,gBAAAA,aAJc;AAMdc,gBAAAA,aANc,GAME;AAClBhB,kBAAAA,QAAQ,EAAEQ,YADQ;AAElBP,kBAAAA,MAAM,EAAEA,MAFU;AAGlBC,kBAAAA,aAAa,EAAEA,aAHG;AAIlBC,kBAAAA,OAAO,EAAE;AAJS,iBANF;AAatBE,gBAAAA,kBAAkB,CAACW,aAAD,CAAlB;;AAbsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAfT,eAAe;AAAA;AAAA;AAAA,OAArB;;AAeAA,IAAAA,eAAe;AAClB;;AAEC,MAAMU,gBAAgB,GAAG;AAAEb,IAAAA,eAAe,EAAfA,eAAF;AAAmBC,IAAAA,kBAAkB,EAAlBA,kBAAnB;AAAuCC,IAAAA,OAAO,EAAPA;AAAvC,GAAzB,CA5BgD,CA6BhD;;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,gBAA7B;AAAA,cACGlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtCeD,kB;;KAAAA,kB","sourcesContent":["import React from \"react\"\r\nimport { useState, useEffect, createContext } from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { GlobalState } from \"./global_states/global_state\";\r\nimport { Pages } from \"./site_stuff/pages\";\r\nimport { OnConnect } from \"./updated_states\";\r\nimport { AccChange } from \"./accChange\";\r\nimport { ethers } from \"ethers\";\r\n\r\n\r\nexport function GlobalStateDefault({ children })  {\r\n  \r\n  const [currentUserInfo, setCurrentUserInfo] = useState({\r\n    provider: \"-\",\r\n    signer: \"-\",\r\n    signerAddress: \"-\",\r\n    balance: \"-\"\r\n  });\r\n\r\n  function Connect() {\r\n    const connectFunction = async () => {\r\n        const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n        await currProvider.send(\"eth_requestAccounts\", []);\r\n        const signer = currProvider.getSigner();\r\n        const signerAddress = await signer.getAddress();\r\n\r\n        const updatedStates = {\r\n            provider: currProvider,\r\n            signer: signer,\r\n            signerAddress: signerAddress,\r\n            balance: \"-\"\r\n        }\r\n    \r\n      setCurrentUserInfo(updatedStates);\r\n    }\r\n    connectFunction();\r\n}\r\n\r\n  const globalStateValue = { currentUserInfo, setCurrentUserInfo, Connect}\r\n  // console.log(currentUserInfo)\r\n  console.log(globalStateValue)\r\n\r\n  return (\r\n    <GlobalState.Provider value={globalStateValue}>\r\n      {children}\r\n    </GlobalState.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}