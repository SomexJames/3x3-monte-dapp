{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\HTML\\\\elements\\\\buttons\\\\hit.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../../../global_states/global_state\";\nimport { getCount } from \"../../../game/functions/getCount\";\nimport { getRandomCard } from \"../../../game/functions/getRandomCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Hit() {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo;\n\n  var gameOver = currentGameInfo.gameOver;\n  var currentBet = currentGameInfo.currentBet;\n  var player = currentGameInfo.player;\n  var deck = currentGameInfo.deck;\n  console.log(\"Hit just rendered\");\n\n  function hit() {\n    console.log(\"hit() just ran\");\n\n    if (!gameOver) {\n      if (currentBet !== null) {\n        // change back to \"currentBet\"\n        var _getRandomCard = getRandomCard(deck),\n            randomCard = _getRandomCard.randomCard,\n            updatedDeck = _getRandomCard.updatedDeck;\n\n        player.cards.push(randomCard);\n        player.count = getCount(player.cards);\n\n        if (player.count > 21) {\n          setGameInfo(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              player: player,\n              gameOver: true,\n              message: 'BUST!'\n            });\n          });\n        } else {\n          setGameInfo(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              deck: updatedDeck,\n              player: player\n            });\n          });\n        }\n      } else {\n        setGameInfo(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            message: 'Place your bet.'\n          });\n        });\n      }\n    } else {\n      setGameInfo(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          message: 'Game over! Please start a new game.'\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return hit();\n    },\n    children: \"Hit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hit, \"ZWTofd3nCfMzZOlLOMaYw8FI9PE=\");\n\n_c = Hit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hit\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/HTML/elements/buttons/hit.js"],"names":["useContext","GlobalState","getCount","getRandomCard","Hit","currentGameInfo","setGameInfo","gameOver","currentBet","player","deck","console","log","hit","randomCard","updatedDeck","cards","push","count","prev","message"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAGA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAClB,oBAAyCJ,UAAU,CAACC,WAAD,CAAnD;AAAA,MAAQI,eAAR,eAAQA,eAAR;AAAA,MAAyBC,WAAzB,eAAyBA,WAAzB;;AACA,MAAIC,QAAQ,GAAGF,eAAe,CAACE,QAA/B;AACA,MAAIC,UAAU,GAAGH,eAAe,CAACG,UAAjC;AACA,MAAIC,MAAM,GAAGJ,eAAe,CAACI,MAA7B;AACA,MAAIC,IAAI,GAAGL,eAAe,CAACK,IAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,WAASC,GAAT,GAAe;AACbF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACE,QAAI,CAACL,QAAL,EAAe;AACX,UAAIC,UAAU,KAAK,IAAnB,EAAyB;AAAE;AACzB,6BAAoCL,aAAa,CAACO,IAAD,CAAjD;AAAA,YAAQI,UAAR,kBAAQA,UAAR;AAAA,YAAoBC,WAApB,kBAAoBA,WAApB;;AACAN,QAAAA,MAAM,CAACO,KAAP,CAAaC,IAAb,CAAkBH,UAAlB;AACAL,QAAAA,MAAM,CAACS,KAAP,GAAehB,QAAQ,CAACO,MAAM,CAACO,KAAR,CAAvB;;AAEA,YAAIP,MAAM,CAACS,KAAP,GAAe,EAAnB,EAAuB;AACrBZ,UAAAA,WAAW,CAAC,UAAAa,IAAI,EAAI;AAAC,mDAAYA,IAAZ;AAAkBV,cAAAA,MAAM,EAANA,MAAlB;AAA0BF,cAAAA,QAAQ,EAAE,IAApC;AAA0Ca,cAAAA,OAAO,EAAE;AAAnD;AAA4D,WAAtE,CAAX;AACD,SAFD,MAEO;AACLd,UAAAA,WAAW,CAAC,UAAAa,IAAI,EAAI;AAAC,mDAAYA,IAAZ;AAAkBT,cAAAA,IAAI,EAAEK,WAAxB;AAAqCN,cAAAA,MAAM,EAANA;AAArC;AAA6C,WAAvD,CAAX;AACD;AACF,OAVD,MAUO;AACHH,QAAAA,WAAW,CAAC,UAAAa,IAAI,EAAI;AAAC,iDAAYA,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B;AAA8C,SAAxD,CAAX;AACH;AACF,KAdH,MAcS;AACLd,MAAAA,WAAW,CAAC,UAAAa,IAAI,EAAI;AAAC,+CAAYA,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B;AAAkE,OAA5E,CAAX;AACD;AACN;;AAED,sBACI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMP,GAAG,EAAT;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAID;;GAhCaT,G;;KAAAA,G","sourcesContent":["import { useContext } from \"react\";\r\nimport { GlobalState } from \"../../../global_states/global_state\";\r\nimport { getCount } from \"../../../game/functions/getCount\";\r\nimport { getRandomCard } from \"../../../game/functions/getRandomCard\";\r\n\r\n\r\nexport function Hit() {\r\n    const { currentGameInfo, setGameInfo } = useContext(GlobalState);\r\n    var gameOver = currentGameInfo.gameOver;\r\n    var currentBet = currentGameInfo.currentBet;\r\n    var player = currentGameInfo.player;\r\n    var deck = currentGameInfo.deck;\r\n    console.log(\"Hit just rendered\");\r\n    function hit() {\r\n      console.log(\"hit() just ran\");\r\n        if (!gameOver) {\r\n            if (currentBet !== null) { // change back to \"currentBet\"\r\n              const { randomCard, updatedDeck } = getRandomCard(deck);\r\n              player.cards.push(randomCard);\r\n              player.count = getCount(player.cards);\r\n      \r\n              if (player.count > 21) {\r\n                setGameInfo(prev => {return { ...prev, player, gameOver: true, message: 'BUST!'}});\r\n              } else {\r\n                setGameInfo(prev => {return { ...prev, deck: updatedDeck, player}});\r\n              }\r\n            } else {\r\n                setGameInfo(prev => {return { ...prev, message: 'Place your bet.'}});\r\n            }\r\n          } else {\r\n            setGameInfo(prev => {return { ...prev, message: 'Game over! Please start a new game.'}});\r\n          }\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => hit()}>Hit</button>\r\n    )\r\n    \r\n  }"]},"metadata":{},"sourceType":"module"}