{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { GlobalStates } from \"./UseContext\";\nimport { ethers } from \"ethers\";\nexport var GetUserInfo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _GlobalStates, currentUserInfo, setCurrentUserInfo, currProvider, signer, signerAddress, updatedStates;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _GlobalStates = GlobalStates(), currentUserInfo = _GlobalStates.currentUserInfo, setCurrentUserInfo = _GlobalStates.setCurrentUserInfo;\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 4;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 4:\n            signer = currProvider.getSigner();\n            _context.next = 7;\n            return signer.getAddress();\n\n          case 7:\n            signerAddress = _context.sent;\n            updatedStates = {\n              provider: currProvider,\n              signer: signer,\n              signerAddress: signerAddress,\n              balance: \"-\"\n            };\n            setCurrentUserInfo(updatedStates);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetUserInfo() {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = GetUserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserInfo\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/functions/DeclareState.js"],"names":["GlobalStates","ethers","GetUserInfo","currentUserInfo","setCurrentUserInfo","currProvider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","signerAddress","updatedStates","provider","balance"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAGA,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACuBF,YAAY,EADnC,EAChBG,eADgB,iBAChBA,eADgB,EACCC,kBADD,iBACCA,kBADD;AAEjBC,YAAAA,YAFiB,GAEF,IAAIJ,MAAM,CAACK,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAFE;AAAA;AAAA,mBAGjBJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAHiB;;AAAA;AAIjBC,YAAAA,MAJiB,GAIRN,YAAY,CAACO,SAAb,EAJQ;AAAA;AAAA,mBAKKD,MAAM,CAACE,UAAP,EALL;;AAAA;AAKjBC,YAAAA,aALiB;AAOjBC,YAAAA,aAPiB,GAOD;AAClBC,cAAAA,QAAQ,EAAEX,YADQ;AAElBM,cAAAA,MAAM,EAAEA,MAFU;AAGlBG,cAAAA,aAAa,EAAEA,aAHG;AAIlBG,cAAAA,OAAO,EAAE;AAJS,aAPC;AAavBb,YAAAA,kBAAkB,CAACW,aAAD,CAAlB;;AAbuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXb,WAAW;AAAA;AAAA;AAAA,GAAjB;KAAMA,W","sourcesContent":["import { GlobalStates } from \"./UseContext\";\r\nimport { ethers } from \"ethers\";\r\n\r\n\r\nexport const GetUserInfo = async () => {\r\n    const {currentUserInfo, setCurrentUserInfo} = GlobalStates();\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    const updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n    setCurrentUserInfo(updatedStates)\r\n}"]},"metadata":{},"sourceType":"module"}