{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { GlobalStatesProvider } from \"./states\";\nexport function updatedStates() {\n  _s();\n\n  var currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  currProvider.send(\"eth_requestAccounts\", []);\n  var signer = currProvider.getSigner();\n  var signerAddress = signer.getAddress();\n  origStates = useContext(GlobalStatesProvider);\n  origStates.provider = currProvider;\n  origStates.signer = signer;\n  origStates.signerAddress = signerAddress;\n  return origStates;\n}\n\n_s(updatedStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/updated_states.js"],"names":["useState","useEffect","useContext","ethers","GlobalStatesProvider","updatedStates","currProvider","providers","Web3Provider","window","ethereum","send","signer","getSigner","signerAddress","getAddress","origStates","provider"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,oBAAT,QAAqC,UAArC;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,MAAMC,YAAY,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAArB;AACAJ,EAAAA,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC;AACA,MAAMC,MAAM,GAAGN,YAAY,CAACO,SAAb,EAAf;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,UAAP,EAAtB;AAEAC,EAAAA,UAAU,GAAGd,UAAU,CAACE,oBAAD,CAAvB;AACAY,EAAAA,UAAU,CAACC,QAAX,GAAsBX,YAAtB;AACAU,EAAAA,UAAU,CAACJ,MAAX,GAAoBA,MAApB;AACAI,EAAAA,UAAU,CAACF,aAAX,GAA2BA,aAA3B;AAEA,SAAOE,UAAP;AACH;;GAZeX,a","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { GlobalStatesProvider } from \"./states\";\r\n\r\nexport function updatedStates() {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvider.getSigner();\r\n    const signerAddress = signer.getAddress();\r\n\r\n    origStates = useContext(GlobalStatesProvider);\r\n    origStates.provider = currProvider;\r\n    origStates.signer = signer;\r\n    origStates.signerAddress = signerAddress;\r\n\r\n    return origStates\r\n}"]},"metadata":{},"sourceType":"module"}