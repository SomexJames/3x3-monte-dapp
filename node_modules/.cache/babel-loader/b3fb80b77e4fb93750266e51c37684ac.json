{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\functions\\\\createCards.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../global_states/global_state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WinningCard() {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \"Move to the next board!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n}\n_c = WinningCard;\nexport function JackPotCard() {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_c2 = JackPotCard;\nexport function GuessCard(ind) {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentUserInfo = _useContext.currentUserInfo,\n      setCurrentUserInfo = _useContext.setCurrentUserInfo,\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo,\n      accReqPending = _useContext.accReqPending,\n      setAccReqPending = _useContext.setAccReqPending;\n\n  var level = currentGameInfo.level;\n  var cards = currentGameInfo.cards;\n\n  function checkCard(e) {\n    var winner = Math.floor(Math.random() * level * 3);\n\n    for (var j = 0; j < level * 3; j++) {\n      if (e.target.id == winner) {\n        cards.push(WinningCard(j));\n      } else {\n        cards.push(BlankCard(j));\n      }\n    }\n\n    setGameInfo(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        cards: cards,\n        gameOver: true\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      id: ind,\n      onClick: function onClick(e) {\n        return checkCard(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GuessCard, \"zUcZH41FnGLkrcq7III3AquUkJU=\");\n\n_c3 = GuessCard;\nexport function BlankCard() {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_c4 = BlankCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"WinningCard\");\n$RefreshReg$(_c2, \"JackPotCard\");\n$RefreshReg$(_c3, \"GuessCard\");\n$RefreshReg$(_c4, \"BlankCard\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/functions/createCards.js"],"names":["useContext","GlobalState","WinningCard","JackPotCard","GuessCard","ind","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","level","cards","checkCard","e","winner","Math","floor","random","j","target","id","push","BlankCard","prev","gameOver"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAGA,OAAO,SAASC,WAAT,GAAuB;AACtB,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP;KATeA,W;AAWhB,OAAO,SAASC,WAAT,GAAuB;AAC1B,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;MAReA,W;AAUhB,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAAA;;AAC3B,oBAA8GL,UAAU,CAACC,WAAD,CAAxH;AAAA,MAAQK,eAAR,eAAQA,eAAR;AAAA,MAAyBC,kBAAzB,eAAyBA,kBAAzB;AAAA,MAA6CC,eAA7C,eAA6CA,eAA7C;AAAA,MAA8DC,WAA9D,eAA8DA,WAA9D;AAAA,MAA2EC,aAA3E,eAA2EA,aAA3E;AAAA,MAA0FC,gBAA1F,eAA0FA,gBAA1F;;AACA,MAAMC,KAAK,GAAGJ,eAAe,CAACI,KAA9B;AACA,MAAIC,KAAK,GAAGL,eAAe,CAACK,KAA5B;;AACA,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAhB,GAAsB,CAAjC,CAAb;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,GAAG,CAA5B,EAA+BQ,CAAC,EAAhC,EAAoC;AAChC,UAAIL,CAAC,CAACM,MAAF,CAASC,EAAT,IAAeN,MAAnB,EAA2B;AACvBH,QAAAA,KAAK,CAACU,IAAN,CAAWrB,WAAW,CAACkB,CAAD,CAAtB;AACH,OAFD,MAEO;AACHP,QAAAA,KAAK,CAACU,IAAN,CAAWC,SAAS,CAACJ,CAAD,CAApB;AACH;AACJ;;AACDX,IAAAA,WAAW,CAAC,UAAAgB,IAAI,EAAI;AAChB,6CACOA,IADP;AAEIZ,QAAAA,KAAK,EAALA,KAFJ;AAGIa,QAAAA,QAAQ,EAAE;AAHd;AAKH,KANU,CAAX;AAOH;;AACD,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAErB,GAA1B;AAA+B,MAAA,OAAO,EAAE,iBAACU,CAAD;AAAA,eAAOD,SAAS,CAACC,CAAD,CAAhB;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BeX,S;;MAAAA,S;AA8BhB,OAAO,SAASoB,SAAT,GAAqB;AACxB,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;MAReA,S","sourcesContent":["import { useContext } from \"react\"\r\nimport { GlobalState } from \"../global_states/global_state\"\r\n\r\n\r\nexport function WinningCard() {\r\n        return (\r\n            <td >\r\n                <div className=\"card\">\r\n                    Move to the next board!\r\n                </div>\r\n            </td>\r\n        )\r\n\r\n}\r\n\r\nexport function JackPotCard() {\r\n    return (\r\n        <td >\r\n            <div className=\"card\">\r\n                You Win!\r\n            </div>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport function GuessCard(ind) {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const level = currentGameInfo.level;\r\n    var cards = currentGameInfo.cards;\r\n    function checkCard(e) {\r\n        let winner = Math.floor(Math.random() * level*3);\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner) {\r\n                cards.push(WinningCard(j))\r\n            } else {\r\n                cards.push(BlankCard(j))\r\n            }\r\n        }\r\n        setGameInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                cards,\r\n                gameOver: true\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <td>\r\n            <div className=\"card\" id={ind} onClick={(e) => checkCard(e)}>\r\n                \r\n            </div>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport function BlankCard() {\r\n    return (\r\n        <td>\r\n            <div className=\"card\">\r\n                \r\n            </div>\r\n        </td>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}