{"ast":null,"code":"import _slicedToArray from\"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState,useEffect,createContext}from\"react\";import{useContext,useMemo}from\"react\";import{GlobalState}from\"./global_states/global_state\";import{ethers}from\"ethers\";import{jsx as _jsx}from\"react/jsx-runtime\";export function GlobalStateDefault(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),accReqPending=_useState2[0],setAccReqPending=_useState2[1];var _useState3=useState(function(){return{provider:\"-\",signer:\"-\",signerAddress:\"-\",balance:\"-\",erc20:\"-\",contractAddress:\"0xbbf8Ca1DCB0968Ced01bA88dc96F967Fd8734ceA\",updateBalance:0};}),_useState4=_slicedToArray(_useState3,2),currentUserInfo=_useState4[0],setCurrentUserInfo=_useState4[1];var _useState5=useState(function(){return{deck:[],level:0,cards:[],dealer:null,player:null,inputValue:'',currentBet:null,gameOver:false,message:null};}),_useState6=_slicedToArray(_useState5,2),currentGameInfo=_useState6[0],setGameInfo=_useState6[1];// useEffect(() => {\n//   const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n//   setCurrentUserInfo(prev => {return{...prev, provider}});\n// }), [currentUserInfo.provider];\n// useEffect(() => {\n//   const signer = currentUserInfo.provider.getSigner();\n//   const signerAddress = currentUserInfo.provider.getSigner().getAddress();\n//   setCurrentUserInfo(prev => {return{...prev, signer, signerAddress}});\n// }), [currentUserInfo.signer, currentUserInfo.signerAddress];\n//   function Connect() {\n//     const connectFunction = async () => {\n//         const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n//         await currProvider.send(\"eth_requestAccounts\", []);\n//         const signer = currProvider.getSigner();\n//         const signerAddress = await signer.getAddress();\n//         const updatedStates = {\n//             provider: currProvider,\n//             signer: signer,\n//             signerAddress: signerAddress,\n//             balance: \"-\"\n//         }\n//       setCurrentUserInfo(updatedStates);\n//     }\n//     connectFunction();\n// }\nvar globalStateValue=useMemo(function(){return{currentUserInfo:currentUserInfo,setCurrentUserInfo:setCurrentUserInfo,currentGameInfo:currentGameInfo,setGameInfo:setGameInfo,accReqPending:accReqPending,setAccReqPending:setAccReqPending};});// console.log(currentUserInfo)\nconsole.log(globalStateValue);return/*#__PURE__*/_jsx(GlobalState.Provider,{value:globalStateValue,children:children});}","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/states.js"],"names":["React","useState","useEffect","createContext","useContext","useMemo","GlobalState","ethers","GlobalStateDefault","children","accReqPending","setAccReqPending","provider","signer","signerAddress","balance","erc20","contractAddress","updateBalance","currentUserInfo","setCurrentUserInfo","deck","level","cards","dealer","player","inputValue","currentBet","gameOver","message","currentGameInfo","setGameInfo","globalStateValue","console","log"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,aAA9B,KAAmD,OAAnD,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,OAApC,CACA,OAASC,WAAT,KAA4B,8BAA5B,CACA,OAASC,MAAT,KAAuB,QAAvB,C,2CAGA,MAAO,SAASC,CAAAA,kBAAT,MAA2C,IAAbC,CAAAA,QAAa,MAAbA,QAAa,CAEhD,cAA4CR,QAAQ,CAClD,IADkD,CAApD,wCAAQS,aAAR,eAAuBC,gBAAvB,eAIA,eAA8CV,QAAQ,CAAC,UAAM,CAC3D,MAAO,CACDW,QAAQ,CAAE,GADT,CAEDC,MAAM,CAAE,GAFP,CAGDC,aAAa,CAAE,GAHd,CAIDC,OAAO,CAAE,GAJR,CAKDC,KAAK,CAAE,GALN,CAMDC,eAAe,CAAE,4CANhB,CAODC,aAAa,CAAE,CAPd,CAAP,CASC,CAVmD,CAAtD,yCAAOC,eAAP,eAAwBC,kBAAxB,eAaA,eAAuCnB,QAAQ,CAAC,UAAM,CACpD,MAAO,CACCoB,IAAI,CAAE,EADP,CAECC,KAAK,CAAE,CAFR,CAGCC,KAAK,CAAE,EAHR,CAICC,MAAM,CAAE,IAJT,CAKCC,MAAM,CAAE,IALT,CAMCC,UAAU,CAAE,EANb,CAOCC,UAAU,CAAE,IAPb,CAQCC,QAAQ,CAAE,KARX,CASCC,OAAO,CAAE,IATV,CAAP,CAWK,CAZwC,CAA/C,yCAAOC,eAAP,eAAwBC,WAAxB,eAiBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEE,GAAMC,CAAAA,gBAAgB,CAAG3B,OAAO,CAAC,iBAAO,CAAEc,eAAe,CAAfA,eAAF,CAAmBC,kBAAkB,CAAlBA,kBAAnB,CAAuCU,eAAe,CAAfA,eAAvC,CAAwDC,WAAW,CAAXA,WAAxD,CAAqErB,aAAa,CAAbA,aAArE,CAAoFC,gBAAgB,CAAhBA,gBAApF,CAAP,EAAD,CAAhC,CACA;AACAsB,OAAO,CAACC,GAAR,CAAYF,gBAAZ,EAEA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEA,gBAA7B,UACGvB,QADH,EADF,CAMD","sourcesContent":["import React from \"react\"\r\nimport { useState, useEffect, createContext } from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { GlobalState } from \"./global_states/global_state\";\r\nimport { ethers } from \"ethers\";\r\n\r\n\r\nexport function GlobalStateDefault({ children })  {\r\n\r\n  const [ accReqPending, setAccReqPending ] = useState(\r\n    null\r\n  );\r\n\r\n  const [currentUserInfo, setCurrentUserInfo] = useState(() => {\r\n    return {\r\n          provider: \"-\",\r\n          signer: \"-\",\r\n          signerAddress: \"-\",\r\n          balance: \"-\",\r\n          erc20: \"-\",\r\n          contractAddress: \"0xbbf8Ca1DCB0968Ced01bA88dc96F967Fd8734ceA\",\r\n          updateBalance: 0\r\n        }\r\n    }\r\n  );\r\n\r\n  const [currentGameInfo, setGameInfo] = useState(() => {\r\n    return {\r\n            deck: [],\r\n            level: 0,\r\n            cards: [],\r\n            dealer: null,\r\n            player: null,\r\n            inputValue: '',\r\n            currentBet: null,\r\n            gameOver: false,\r\n            message: null\r\n          }\r\n        }\r\n      );\r\n\r\n    \r\n\r\n  // useEffect(() => {\r\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n  //   setCurrentUserInfo(prev => {return{...prev, provider}});\r\n  // }), [currentUserInfo.provider];\r\n\r\n  // useEffect(() => {\r\n  //   const signer = currentUserInfo.provider.getSigner();\r\n  //   const signerAddress = currentUserInfo.provider.getSigner().getAddress();\r\n  //   setCurrentUserInfo(prev => {return{...prev, signer, signerAddress}});\r\n  // }), [currentUserInfo.signer, currentUserInfo.signerAddress];\r\n\r\n//   function Connect() {\r\n//     const connectFunction = async () => {\r\n//         const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n//         await currProvider.send(\"eth_requestAccounts\", []);\r\n//         const signer = currProvider.getSigner();\r\n//         const signerAddress = await signer.getAddress();\r\n\r\n//         const updatedStates = {\r\n//             provider: currProvider,\r\n//             signer: signer,\r\n//             signerAddress: signerAddress,\r\n//             balance: \"-\"\r\n//         }\r\n    \r\n//       setCurrentUserInfo(updatedStates);\r\n//     }\r\n//     connectFunction();\r\n// }\r\n\r\n  const globalStateValue = useMemo(() => ({ currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending}));\r\n  // console.log(currentUserInfo)\r\n  console.log(globalStateValue)\r\n\r\n  return (\r\n    <GlobalState.Provider value={globalStateValue}>\r\n      {children}\r\n    </GlobalState.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}