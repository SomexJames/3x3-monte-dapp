{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport { updateCurrentUser } from \"./components/functions/curr_user\";\nimport { StartPage } from \"./components/StartPage\";\nimport { currentProvider, setcurrentProvider, currentUser, setCurrentUser } from \"./components/states\";\nimport { updatedStates } from \"./components/updated_states\";\nexport function MyApp() {\n  _s();\n\n  var onStart = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currProvider, signer, signerAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n              _context.next = 3;\n              return currProvider.send(\"eth_requestAccounts\", []);\n\n            case 3:\n              _context.next = 5;\n              return currProvider.getSigner();\n\n            case 5:\n              signer = _context.sent;\n              _context.next = 8;\n              return signer.getAddress();\n\n            case 8:\n              signerAddress = _context.sent;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onStart() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  onStart();\n  updatedStates();\n  useEffect(function () {\n    setcurrentProvider(updateCurrentUser[0]);\n  }, [currentProvider.provider]);\n  useEffect(function () {\n    setCurrentUser(updateCurrentUser[1]);\n  }, [currentUser.signer, currentUser.signerAddress]);\n  return StartPage();\n}\n\n_s(MyApp, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/MyApp.js"],"names":["useState","useEffect","ethers","erc20abi","updateCurrentUser","StartPage","currentProvider","setcurrentProvider","currentUser","setCurrentUser","updatedStates","MyApp","onStart","currProvider","providers","Web3Provider","window","ethereum","send","getSigner","signer","getAddress","signerAddress","provider"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,WAA9C,EAA2DC,cAA3D,QAAiF,qBAAjF;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AAEpB,MAAMC,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,cAAAA,YADM,GACS,IAAIX,MAAM,CAACY,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADT;AAAA;AAAA,qBAENJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFM;;AAAA;AAAA;AAAA,qBAGSL,YAAY,CAACM,SAAb,EAHT;;AAAA;AAGNC,cAAAA,MAHM;AAAA;AAAA,qBAIgBA,MAAM,CAACC,UAAP,EAJhB;;AAAA;AAINC,cAAAA,aAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPV,OAAO;AAAA;AAAA;AAAA,KAAb;;AAOAA,EAAAA,OAAO;AAGPF,EAAAA,aAAa;AAEbT,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,kBAAkB,CAACH,iBAAiB,CAAC,CAAD,CAAlB,CAAlB;AACH,GAFQ,EAEN,CAACE,eAAe,CAACiB,QAAjB,CAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,cAAc,CAACL,iBAAiB,CAAC,CAAD,CAAlB,CAAd;AACH,GAFQ,EAEN,CAACI,WAAW,CAACY,MAAb,EAAsBZ,WAAW,CAACc,aAAlC,CAFM,CAAT;AAKA,SAAOjB,SAAS,EAAhB;AAEH;;GAzBeM,K;;KAAAA,K","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport erc20abi from \"./ERC20abi.json\";\r\nimport { updateCurrentUser } from \"./components/functions/curr_user\";\r\nimport { StartPage } from \"./components/StartPage\";\r\nimport { currentProvider, setcurrentProvider, currentUser, setCurrentUser } from \"./components/states\";\r\nimport { updatedStates } from \"./components/updated_states\";\r\n\r\nexport function MyApp() {\r\n\r\n    const onStart = async () => {\r\n        const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n        await currProvider.send(\"eth_requestAccounts\", []);\r\n        const signer = await currProvider.getSigner();\r\n        const signerAddress = await signer.getAddress();\r\n    }\r\n\r\n    onStart();\r\n\r\n\r\n    updatedStates();\r\n    \r\n    useEffect(() => {\r\n        setcurrentProvider(updateCurrentUser[0]);\r\n    }, [currentProvider.provider]);\r\n\r\n    useEffect(() => {\r\n        setCurrentUser(updateCurrentUser[1]);\r\n    }, [currentUser.signer , currentUser.signerAddress]);\r\n\r\n\r\n    return StartPage();\r\n\r\n}"]},"metadata":{},"sourceType":"module"}