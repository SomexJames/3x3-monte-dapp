{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { GlobalState } from \"./global_state\";\nexport var OnConnect = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _s(_asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, signer, signerAddress, _useContext, currentUserInfo, setCurrentUserInfo;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 4;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 4:\n            _context.next = 6;\n            return currProvider.getSigner();\n\n          case 6:\n            signer = _context.sent;\n            _context.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            signerAddress = _context.sent;\n            _useContext = useContext(GlobalState), currentUserInfo = _useContext.currentUserInfo, setCurrentUserInfo = _useContext.setCurrentUserInfo;\n            updatedStates = {\n              provider: currProvider,\n              signer: signer,\n              signerAddress: signerAddress,\n              balance: \"-\"\n            };\n            setCurrentUserInfo(updatedStates);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"bE6/tZHQ9+QtIU1ZaUWzgeO9mMk=\")), \"bE6/tZHQ9+QtIU1ZaUWzgeO9mMk=\");\n\n  return function OnConnect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = OnConnect;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnConnect\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/updated_states.js"],"names":["useState","useEffect","useContext","ethers","GlobalState","OnConnect","currProvider","providers","Web3Provider","window","ethereum","send","getSigner","signer","getAddress","signerAddress","currentUserInfo","setCurrentUserInfo","updatedStates","provider","balance"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,IAAMC,SAAS;AAAA;;AAAA,4EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACfC,YAAAA,YADe,GACA,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADA;AAAA;AAAA,mBAEfJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFe;;AAAA;AAAA;AAAA,mBAGAL,YAAY,CAACM,SAAb,EAHA;;AAAA;AAGfC,YAAAA,MAHe;AAAA;AAAA,mBAIOA,MAAM,CAACC,UAAP,EAJP;;AAAA;AAIfC,YAAAA,aAJe;AAAA,0BAMyBb,UAAU,CAACE,WAAD,CANnC,EAMdY,eANc,eAMdA,eANc,EAMGC,kBANH,eAMGA,kBANH;AAOrBC,YAAAA,aAAa,GAAG;AACZC,cAAAA,QAAQ,EAAEb,YADE;AAEZO,cAAAA,MAAM,EAAEA,MAFI;AAGZE,cAAAA,aAAa,EAAEA,aAHH;AAIZK,cAAAA,OAAO,EAAE;AAJG,aAAhB;AAOAH,YAAAA,kBAAkB,CAACC,aAAD,CAAlB;;AAdqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATb,SAAS;AAAA;AAAA;AAAA,GAAf;KAAMA,S","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { GlobalState } from \"./global_state\"\r\n\r\nexport const OnConnect = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = await currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    const {currentUserInfo, setCurrentUserInfo} = useContext(GlobalState);\r\n    updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n\r\n    setCurrentUserInfo(updatedStates);\r\n    \r\n  };"]},"metadata":{},"sourceType":"module"}