{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Erc20 } from \"../contract\";\nexport var updateCurrentUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, signer, signerAddress;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 3;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 3:\n            _context.next = 5;\n            return currProvider.getSigner();\n\n          case 5:\n            signer = _context.sent;\n            _context.next = 8;\n            return signer.getAddress();\n\n          case 8:\n            signerAddress = _context.sent;\n            return _context.abrupt(\"return\", [{\n              provider: currProvider\n            }, {\n              signer: signer,\n              signerAddress: signerAddress\n            }]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function updateCurrentUser() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/functions/curr_user.js"],"names":["useState","useEffect","ethers","Erc20","updateCurrentUser","currProvider","providers","Web3Provider","window","ethereum","send","getSigner","signer","getAddress","signerAddress","provider"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAEA,OAAO,IAAMC,iBAAiB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,YADuB,GACR,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADQ;AAAA;AAAA,mBAEvBJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFuB;;AAAA;AAAA;AAAA,mBAGRL,YAAY,CAACM,SAAb,EAHQ;;AAAA;AAGvBC,YAAAA,MAHuB;AAAA;AAAA,mBAIDA,MAAM,CAACC,UAAP,EAJC;;AAAA;AAIvBC,YAAAA,aAJuB;AAAA,6CAMrB,CACJ;AAACC,cAAAA,QAAQ,EAAEV;AAAX,aADI,EAEJ;AAACO,cAAAA,MAAM,EAAEA,MAAT;AACAE,cAAAA,aAAa,EAAEA;AADf,aAFI,CANqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBV,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { Erc20 } from \"../contract\";\r\n\r\nexport const updateCurrentUser = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = await currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    return ([\r\n        {provider: currProvider},\r\n        {signer: signer,\r\n        signerAddress: signerAddress}\r\n        ]\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}