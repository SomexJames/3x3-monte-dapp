{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Projects\\\\3x3-monte-dapp\\\\src\\\\components\\\\functions\\\\createCards.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../global_states/global_state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WinningCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Correct Card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this)\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }, this);\n}\n_c = WinningCard;\nexport function CorrectCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This was the correct card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}\n_c2 = CorrectCard;\nexport function JackPotCard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: \"You Win!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n_c3 = JackPotCard;\nexport function GuessCard(ind) {\n  _s();\n  const {\n    currentUserInfo,\n    setCurrentUserInfo,\n    currentGameInfo,\n    setGameInfo,\n    accReqPending,\n    setAccReqPending\n  } = useContext(GlobalState);\n  const level = currentGameInfo.level;\n  var cards = currentGameInfo.cards;\n  function checkCard(e) {\n    let winner = Math.floor(Math.random() * level * 3);\n    for (let j = 0; j < level * 3; j++) {\n      if (e.target.id == winner && winner == j) {\n        cards.push(WinningCard(j));\n      } else if (winner == j) {\n        cards.push(CorrectCard(j));\n      } else if (e.target.id == j) {\n        cards.push(SelectedCard(j));\n      } else {\n        cards.push(BlankCard(j));\n      }\n    }\n    setGameInfo(prev => {\n      if (e.target.id == winner && level <= 3) {\n        return {\n          ...prev,\n          cards,\n          gameOver: true,\n          level: level + 1\n        };\n      } else if (e.target.id != winner) {\n        return {\n          ...prev,\n          cards,\n          gameOver: true,\n          level: 0\n        };\n      } else {\n        return {\n          ...prev,\n          cards,\n          gameOver: true\n        };\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    id: ind,\n    onClick: e => checkCard(e)\n  }, ind, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n}\n_s(GuessCard, \"zUcZH41FnGLkrcq7III3AquUkJU=\");\n_c4 = GuessCard;\nexport function SelectedCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected-card\"\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n}\n_c5 = SelectedCard;\nexport function BlankCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blank-card\"\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }, this);\n}\n_c6 = BlankCard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"WinningCard\");\n$RefreshReg$(_c2, \"CorrectCard\");\n$RefreshReg$(_c3, \"JackPotCard\");\n$RefreshReg$(_c4, \"GuessCard\");\n$RefreshReg$(_c5, \"SelectedCard\");\n$RefreshReg$(_c6, \"BlankCard\");","map":{"version":3,"names":["useContext","GlobalState","jsxDEV","_jsxDEV","WinningCard","j","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","CorrectCard","_c2","JackPotCard","_c3","GuessCard","ind","_s","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","level","cards","checkCard","e","winner","Math","floor","random","target","id","push","SelectedCard","BlankCard","prev","gameOver","onClick","_c4","_c5","_c6","$RefreshReg$"],"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/functions/createCards.js"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { GlobalState } from \"../global_states/global_state\"\r\n\r\n\r\nexport function WinningCard(j) {\r\n        return (\r\n                <div className=\"right-card\" key={j}>\r\n                    <p>Correct Card!</p>\r\n                </div>\r\n        )\r\n\r\n}\r\n\r\nexport function CorrectCard(j) {\r\n    return (\r\n            <div className=\"right-card\" key={j}>\r\n                <p>This was the correct card</p>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport function JackPotCard() {\r\n    return (\r\n            <div className=\"card\">\r\n                You Win!\r\n            </div>\r\n    )\r\n}\r\n\r\nexport function GuessCard(ind) {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const level = currentGameInfo.level;\r\n    var cards = currentGameInfo.cards;\r\n    function checkCard(e) {\r\n        let winner = Math.floor(Math.random() * level*3);\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner && winner == j) {\r\n                cards.push(WinningCard(j))\r\n            } else if (winner == j) {\r\n                cards.push(CorrectCard(j))\r\n            } else if (e.target.id == j) {\r\n                cards.push(SelectedCard(j));\r\n            } else {\r\n                cards.push(BlankCard(j))\r\n            }\r\n        }\r\n        setGameInfo(prev => {\r\n            if (e.target.id == winner && level <= 3) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: level + 1\r\n                }\r\n            } else if (e.target.id != winner) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: 0\r\n                }\r\n            } else {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        \r\n            <div className=\"card\" id={ind} key={ind} onClick={(e) => checkCard(e)}>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport function SelectedCard(j) {\r\n    return (\r\n            <div className=\"selected-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport function BlankCard(j) {\r\n    return (\r\n            <div className=\"blank-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}