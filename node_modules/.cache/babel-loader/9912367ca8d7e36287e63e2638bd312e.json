{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\src\\\\components\\\\HTML\\\\elements\\\\buttons\\\\stand.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../../../global_states/global_state\";\nimport { getCount } from \"../../../game/functions/getCount\";\nimport { getWinner } from \"../../../game/functions/getWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Stand() {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo;\n\n  var gameOver = currentGameInfo.gameOver;\n  var currentBet = currentGameInfo.currentBet;\n  var deck = currentGameInfo.deck;\n  var player = currentGameInfo.player;\n  var dealer = currentGameInfo.dealer;\n  var wallet = currentGameInfo.wallet;\n  var message = currentGameInfo.message;\n\n  function getRandomCard() {\n    console.log(\"getRandomCard() just ran\");\n    var updatedDeck = deck;\n    var ind = Math.floor(Math.random() * updatedDeck.length);\n    var randomCard = updatedDeck[ind];\n    updatedDeck.splice(ind, 1);\n    setGameInfo(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        deck: updatedDeck\n      });\n    });\n    return randomCard;\n  }\n\n  function dealerDraw() {\n    console.log(dealer);\n    var randomCard = getRandomCard();\n    var cards = dealer.cards.concat(randomCard);\n    console.log(cards);\n    var count = Number(getCount(cards));\n    return {\n      cards: cards,\n      count: count\n    };\n  }\n\n  function stand() {\n    console.log(\"stand() just ran\");\n\n    if (!gameOver) {\n      // Show dealer's 2nd card\n      // console.log(dealer.cards);\n      // console.log(dealer.count);\n      // Keep drawing cards until count is 17 or more\n      while (dealer.count <= player.count || dealer.count < 12) {\n        var _dealerDraw = dealerDraw(),\n            cards = _dealerDraw.cards,\n            count = _dealerDraw.count;\n\n        console.log(cards);\n        dealer = {\n          cards: cards,\n          count: count\n        };\n        console.log(dealer);\n        setGameInfo(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            dealer: dealer\n          });\n        });\n      }\n\n      if (dealer.count > 21) {\n        // Add transaction code here (based on \"currentBet\")\n        setGameInfo(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            deck: deck,\n            dealer: dealer,\n            wallet: wallet,\n            // Add later\n            gameOver: true,\n            message: 'Dealer bust! You win!'\n          });\n        });\n      } else {\n        var winner = getWinner(dealer, player);\n\n        if (winner === 'dealer') {\n          message = 'Dealer wins...'; // Add transaction code here (based on \"currentBet\")\n        } else if (winner === 'player') {\n          message = 'You win!'; // Add transaction code here (based on \"currentBet\")\n        } else {\n          message = 'Push.';\n        }\n\n        setGameInfo(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            deck: deck,\n            dealer: dealer,\n            wallet: wallet,\n            gameOver: true,\n            message: message\n          });\n        });\n      }\n    } else {\n      setGameInfo(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          message: 'Game over! Please start a new game.'\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return stand();\n    },\n    children: \"Stand\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stand, \"ZWTofd3nCfMzZOlLOMaYw8FI9PE=\");\n\n_c = Stand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stand\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/HTML/elements/buttons/stand.js"],"names":["useContext","GlobalState","getCount","getWinner","Stand","currentGameInfo","setGameInfo","gameOver","currentBet","deck","player","dealer","wallet","message","getRandomCard","console","log","updatedDeck","ind","Math","floor","random","length","randomCard","splice","prev","dealerDraw","cards","concat","count","Number","stand","winner"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\r\nimport { GlobalState } from \"../../../global_states/global_state\";\r\nimport { getCount } from \"../../../game/functions/getCount\";\r\nimport { getWinner } from \"../../../game/functions/getWinner\";\r\n\r\n\r\nexport function Stand() {\r\n    const { currentGameInfo, setGameInfo } = useContext(GlobalState);\r\n    const gameOver = currentGameInfo.gameOver;\r\n    const currentBet = currentGameInfo.currentBet;\r\n    var deck = currentGameInfo.deck;\r\n    var player = currentGameInfo.player;\r\n    var dealer = currentGameInfo.dealer;\r\n    var wallet = currentGameInfo.wallet;\r\n    var message = currentGameInfo.message;\r\n\r\n    function getRandomCard() {\r\n        console.log(\"getRandomCard() just ran\");\r\n        var updatedDeck = deck;\r\n        var ind = Math.floor(Math.random() * updatedDeck.length);\r\n        const randomCard = updatedDeck[ind];\r\n        updatedDeck.splice(ind, 1);\r\n        \r\n        setGameInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                deck: updatedDeck\r\n            }\r\n        })\r\n        return  (randomCard)\r\n    }\r\n\r\n    function dealerDraw() {\r\n        console.log(dealer);\r\n        const randomCard  = getRandomCard();\r\n        const cards = dealer.cards.concat(randomCard);\r\n        console.log(cards);\r\n        const count = Number(getCount(cards));\r\n        return {cards, count}\r\n    }\r\n\r\n    function stand() {\r\n        console.log(\"stand() just ran\");\r\n        if (!gameOver) {\r\n    // Show dealer's 2nd card\r\n        // console.log(dealer.cards);\r\n        // console.log(dealer.count);\r\n\r\n    // Keep drawing cards until count is 17 or more\r\n        while (dealer.count <= player.count || dealer.count < 12) {\r\n            const {cards, count} = dealerDraw();\r\n            console.log(cards);\r\n            dealer = {cards, count};\r\n            console.log(dealer)\r\n            setGameInfo(prev => {\r\n                return{\r\n                    ...prev,\r\n                    dealer\r\n                }\r\n            })\r\n        }\r\n\r\n        if (dealer.count > 21 ) {\r\n            // Add transaction code here (based on \"currentBet\")\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    deck,\r\n                    dealer,\r\n                    wallet, // Add later\r\n                    gameOver: true,\r\n                    message: 'Dealer bust! You win!'\r\n                }\r\n            });\r\n            \r\n        } else {\r\n            const winner = getWinner(dealer, player);\r\n\r\n            if (winner === 'dealer') {\r\n            message = 'Dealer wins...';\r\n            // Add transaction code here (based on \"currentBet\")\r\n            } else if (winner === 'player') {\r\n            message = 'You win!';\r\n            // Add transaction code here (based on \"currentBet\")\r\n            } else {\r\n            message = 'Push.';\r\n            }\r\n\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    deck,\r\n                    dealer,\r\n                    wallet,\r\n                    gameOver: true,\r\n                    message\r\n                }\r\n            })\r\n\r\n        }\r\n        } else {\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    message: 'Game over! Please start a new game.'\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <button onClick={() => stand()}>Stand</button>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}