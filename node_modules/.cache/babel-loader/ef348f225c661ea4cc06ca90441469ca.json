{"ast":null,"code":"import{useContext}from\"react\";import{GlobalState}from\"../global_states/global_state\";import{jsx as _jsx}from\"react/jsx-runtime\";export function NewGame(){const{currentUserInfo,setCurrentUserInfo,currentGameInfo,setGameInfo,accReqPending,setAccReqPending}=useContext(GlobalState);const gameOver=currentGameInfo.gameOver;const level=currentGameInfo.level;const currentBet=currentGameInfo.currentBet;function newGame(){if(currentBet===0){setGameInfo(prev=>{return{...prev,gameOver:false,cards:[],currentBet:null};});}else if(currentBet==\"freePlay\"){setGameInfo(prev=>{return{...prev,gameOver:false,cards:[],level:1};});}else{setGameInfo(prev=>{return{...prev,gameOver:false,cards:[],level:1,currentBet:currentBet-1};});}}return/*#__PURE__*/_jsx(\"div\",{className:\"buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>newGame(),children:\"Start New Game\"})});}","map":{"version":3,"names":["useContext","GlobalState","jsx","_jsx","NewGame","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","gameOver","level","currentBet","newGame","prev","cards","className","children","onClick"],"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/buttons/newGame.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { GlobalState } from \"../global_states/global_state\";\r\n\r\n\r\nexport function NewGame() {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const gameOver = currentGameInfo.gameOver;\r\n    const level = currentGameInfo.level;\r\n    const currentBet = currentGameInfo.currentBet;\r\n\r\n    function newGame() {\r\n        if (currentBet === 0) {\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    gameOver: false,\r\n                    cards: [],\r\n                    currentBet: null\r\n                }\r\n            });\r\n        } else if (currentBet == \"freePlay\") {\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    gameOver: false,\r\n                    cards: [],\r\n                    level: 1\r\n                }\r\n            })\r\n        } else {\r\n            setGameInfo(prev => {\r\n                return {\r\n                    ...prev,\r\n                    gameOver: false,\r\n                    cards: [],\r\n                    level: 1,\r\n                    currentBet: currentBet - 1\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button className=\"button\" onClick={() => newGame()}>Start New Game</button>\r\n        </div>\r\n    )\r\n}"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG5D,MAAO,SAAS,CAAAC,OAAOA,CAAA,CAAG,CACtB,KAAM,CAAEC,eAAe,CAAEC,kBAAkB,CAAEC,eAAe,CAAEC,WAAW,CAAEC,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,UAAU,CAACC,WAAW,CAAC,CACrI,KAAM,CAAAU,QAAQ,CAAGJ,eAAe,CAACI,QAAQ,CACzC,KAAM,CAAAC,KAAK,CAAGL,eAAe,CAACK,KAAK,CACnC,KAAM,CAAAC,UAAU,CAAGN,eAAe,CAACM,UAAU,CAE7C,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACf,GAAID,UAAU,GAAK,CAAC,CAAE,CAClBL,WAAW,CAACO,IAAI,EAAI,CAChB,MAAO,CACH,GAAGA,IAAI,CACPJ,QAAQ,CAAE,KAAK,CACfK,KAAK,CAAE,EAAE,CACTH,UAAU,CAAE,IAChB,CAAC,CACL,CAAC,CAAC,CACN,CAAC,IAAM,IAAIA,UAAU,EAAI,UAAU,CAAE,CACjCL,WAAW,CAACO,IAAI,EAAI,CAChB,MAAO,CACH,GAAGA,IAAI,CACPJ,QAAQ,CAAE,KAAK,CACfK,KAAK,CAAE,EAAE,CACTJ,KAAK,CAAE,CACX,CAAC,CACL,CAAC,CAAC,CACN,CAAC,IAAM,CACHJ,WAAW,CAACO,IAAI,EAAI,CAChB,MAAO,CACH,GAAGA,IAAI,CACPJ,QAAQ,CAAE,KAAK,CACfK,KAAK,CAAE,EAAE,CACTJ,KAAK,CAAE,CAAC,CACRC,UAAU,CAAEA,UAAU,CAAG,CAC7B,CAAC,CACL,CAAC,CAAC,CACN,CACJ,CACA,mBACIV,IAAA,QAAKc,SAAS,CAAC,SAAS,CAAAC,QAAA,cACpBf,IAAA,WAAQc,SAAS,CAAC,QAAQ,CAACE,OAAO,CAAEA,CAAA,GAAML,OAAO,CAAC,CAAE,CAAAI,QAAA,CAAC,gBAAc,CAAQ,CAAC,CAC3E,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module"}