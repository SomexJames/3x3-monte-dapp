{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { GlobalStatesProvider, GlobalStates, setCurrentUserInfo } from \"./states\";\nexport function updatedStates() {\n  _s();\n\n  var currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  currProvInfo = currProvider.send(\"eth_requestAccounts\", []);\n  var signer = currProvInfo.getSigner();\n  var signerAddress = signer.getAddress();\n  origStates = useContext(GlobalStates);\n  updatedStates = {\n    provider: currProvider,\n    signer: signer,\n    signerAddress: signerAddress,\n    balance: \"-\"\n  };\n  return origStates.setCurrentUserInfo(updatedStates);\n}\n\n_s(updatedStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var OnConnect = /*#__PURE__*/function () {\n  var _s2 = $RefreshSig$();\n\n  var _ref = _s2(_asyncToGenerator(_s2( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, signer, signerAddress;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s2();\n\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 4;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 4:\n            _context.next = 6;\n            return currProvider.getSigner();\n\n          case 6:\n            signer = _context.sent;\n            _context.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            signerAddress = _context.sent;\n            origStates = useContext(GlobalStates);\n            updatedStates = {\n              provider: currProvider,\n              signer: signer,\n              signerAddress: signerAddress,\n              balance: \"-\"\n            };\n            return _context.abrupt(\"return\", origStates.setCurrentUserInfo(updatedStates));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\")), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n  return function OnConnect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = OnConnect;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnConnect\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/updated_states.js"],"names":["useState","useEffect","useContext","ethers","GlobalStatesProvider","GlobalStates","setCurrentUserInfo","updatedStates","currProvider","providers","Web3Provider","window","ethereum","currProvInfo","send","signer","getSigner","signerAddress","getAddress","origStates","provider","balance","OnConnect"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,oBAAT,EAA+BC,YAA/B,EAA6CC,kBAA7C,QAAuE,UAAvE;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,MAAMC,YAAY,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAArB;AACAC,EAAAA,YAAY,GAAGL,YAAY,CAACM,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAAf;AACA,MAAMC,MAAM,GAAGF,YAAY,CAACG,SAAb,EAAf;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,UAAP,EAAtB;AAEAC,EAAAA,UAAU,GAAGjB,UAAU,CAACG,YAAD,CAAvB;AACAE,EAAAA,aAAa,GAAG;AACZa,IAAAA,QAAQ,EAAEZ,YADE;AAEZO,IAAAA,MAAM,EAAEA,MAFI;AAGZE,IAAAA,aAAa,EAAEA,aAHH;AAIZI,IAAAA,OAAO,EAAE;AAJG,GAAhB;AAQA,SACIF,UAAU,CAACb,kBAAX,CAA8BC,aAA9B,CADJ;AAIH;;GAnBeA,a;;AAqBhB,OAAO,IAAMe,SAAS;AAAA;;AAAA,8EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACfd,YAAAA,YADe,GACA,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADA;AAAA;AAAA,mBAEfJ,YAAY,CAACM,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFe;;AAAA;AAAA;AAAA,mBAGAN,YAAY,CAACQ,SAAb,EAHA;;AAAA;AAGfD,YAAAA,MAHe;AAAA;AAAA,mBAIOA,MAAM,CAACG,UAAP,EAJP;;AAAA;AAIfD,YAAAA,aAJe;AAMrBE,YAAAA,UAAU,GAAGjB,UAAU,CAACG,YAAD,CAAvB;AACAE,YAAAA,aAAa,GAAG;AACZa,cAAAA,QAAQ,EAAEZ,YADE;AAEZO,cAAAA,MAAM,EAAEA,MAFI;AAGZE,cAAAA,aAAa,EAAEA,aAHH;AAIZI,cAAAA,OAAO,EAAE;AAJG,aAAhB;AAPqB,6CAejBF,UAAU,CAACb,kBAAX,CAA8BC,aAA9B,CAfiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATe,SAAS;AAAA;AAAA;AAAA,GAAf;KAAMA,S","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { GlobalStatesProvider, GlobalStates, setCurrentUserInfo } from \"./states\";\r\n\r\nexport function updatedStates() {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    currProvInfo = currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvInfo.getSigner();\r\n    const signerAddress = signer.getAddress();\r\n\r\n    origStates = useContext(GlobalStates);\r\n    updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n    \r\n\r\n    return (\r\n        origStates.setCurrentUserInfo(updatedStates)\r\n    )\r\n\r\n}\r\n\r\nexport const OnConnect = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = await currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    origStates = useContext(GlobalStates);\r\n    updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n\r\n    return (\r\n        origStates.setCurrentUserInfo(updatedStates)\r\n    )\r\n\r\n  };"]},"metadata":{},"sourceType":"module"}