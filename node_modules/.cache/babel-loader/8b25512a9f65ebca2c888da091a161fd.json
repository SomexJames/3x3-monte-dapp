{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { GlobalStatesProvider } from \"./states\";\nexport var updatedStates = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _s(_asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, signer, signerAddress;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 4;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 4:\n            _context.next = 6;\n            return currProvider.getSigner();\n\n          case 6:\n            signer = _context.sent;\n            _context.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            signerAddress = _context.sent;\n            origStates = useContext(GlobalStatesProvider);\n            origStates.provider = currProvider;\n            origStates.signer = signer;\n            origStates.signerAddress = signerAddress;\n            return _context.abrupt(\"return\", origStates);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\")), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n  return function updatedStates() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/updated_states.js"],"names":["useState","useEffect","useContext","ethers","GlobalStatesProvider","updatedStates","currProvider","providers","Web3Provider","window","ethereum","send","getSigner","signer","getAddress","signerAddress","origStates","provider"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,oBAAT,QAAqC,UAArC;AAEA,OAAO,IAAMC,aAAa;AAAA;;AAAA,4EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACnBC,YAAAA,YADmB,GACJ,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADI;AAAA;AAAA,mBAEnBJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAFmB;;AAAA;AAAA;AAAA,mBAGJL,YAAY,CAACM,SAAb,EAHI;;AAAA;AAGnBC,YAAAA,MAHmB;AAAA;AAAA,mBAIGA,MAAM,CAACC,UAAP,EAJH;;AAAA;AAInBC,YAAAA,aAJmB;AAMzBC,YAAAA,UAAU,GAAGd,UAAU,CAACE,oBAAD,CAAvB;AACAY,YAAAA,UAAU,CAACC,QAAX,GAAsBX,YAAtB;AACAU,YAAAA,UAAU,CAACH,MAAX,GAAoBA,MAApB;AACAG,YAAAA,UAAU,CAACD,aAAX,GAA2BA,aAA3B;AATyB,6CAWlBC,UAXkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbX,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { GlobalStatesProvider } from \"./states\";\r\n\r\nexport const updatedStates = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = await currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    origStates = useContext(GlobalStatesProvider);\r\n    origStates.provider = currProvider;\r\n    origStates.signer = signer;\r\n    origStates.signerAddress = signerAddress;\r\n\r\n    return origStates\r\n}"]},"metadata":{},"sourceType":"module"}