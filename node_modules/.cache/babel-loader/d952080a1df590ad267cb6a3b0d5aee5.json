{"ast":null,"code":"import { ethers } from \"ethers\";\nexport const handleEthAccReq = async () => {\n  const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  const _ethReqP = await currProvider.send(\"eth_requestAccounts\", []).catch(e => e.code === -32002 ? false : console.log(e));\n  return _ethReqP;\n};","map":{"version":3,"names":["ethers","handleEthAccReq","currProvider","providers","Web3Provider","window","ethereum","_ethReqP","send","catch","e","code","console","log"],"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/functions/handleEthAccReq.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\n\r\n\r\nexport const handleEthAccReq = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    const _ethReqP = await currProvider.send(\"eth_requestAccounts\", []).catch(e => \r\n        e.code === -32002 ? \r\n            false :\r\n            console.log(e)\r\n    );\r\n    \r\n    return _ethReqP\r\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAI/B,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,YAAY,GAAG,IAAIF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,EAAE,KAAK,CAAC;EAC9E,MAAMC,QAAQ,GAAG,MAAML,YAAY,CAACM,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAACC,KAAK,CAACC,CAAC,IACvEA,CAAC,CAACC,IAAI,KAAK,CAAC,KAAK,GACb,KAAK,GACLC,OAAO,CAACC,GAAG,CAACH,CAAC,CACrB,CAAC;EAED,OAAOH,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}