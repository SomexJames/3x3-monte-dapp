{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\pages\\\\start_page_comp\\\\base_selector_comp\\\\game_selector_comp\\\\game_comp\\\\gameScript.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../../../../../global_states/global_state\";\nimport { GameEnd } from \"./gameEnd\";\nimport { GameStart } from \"./gameStart\";\nimport { WinningCard, BlankCard, JackPotCard } from \"../../../../../functions/createCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function GameScript() {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentUserInfo = _useContext.currentUserInfo,\n      setCurrentUserInfo = _useContext.setCurrentUserInfo,\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo,\n      accReqPending = _useContext.accReqPending,\n      setAccReqPending = _useContext.setAccReqPending;\n\n  var gameOver = currentGameInfo.gameOver;\n  var level = currentGameInfo.level;\n\n  function checkCard(e) {\n    var winner = Math.floor(Math.random() * level * 3);\n\n    for (var j = 0; j < level * 3; j++) {\n      if (e.target.id == winner) {\n        postCardsArr.push(WinningCard());\n      } else {\n        postCardsArr.push(BlankCard());\n      }\n    }\n\n    setGameInfo(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        gameOver: true\n      });\n    });\n  }\n\n  if (!gameOver) {\n    return /*#__PURE__*/_jsxDEV(GameStart, {\n      func: checkCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose the right card to move onto the next level!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: postCardsArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(GameScript, \"zUcZH41FnGLkrcq7III3AquUkJU=\");\n\n_c = GameScript;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameScript\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/pages/start_page_comp/base_selector_comp/game_selector_comp/game_comp/gameScript.js"],"names":["useContext","GlobalState","GameEnd","GameStart","WinningCard","BlankCard","JackPotCard","GameScript","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","gameOver","level","checkCard","e","winner","Math","floor","random","j","target","id","postCardsArr","push","prev"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,2CAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,sCAApD;;;AAGA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,oBAA8GP,UAAU,CAACC,WAAD,CAAxH;AAAA,MAAQO,eAAR,eAAQA,eAAR;AAAA,MAAyBC,kBAAzB,eAAyBA,kBAAzB;AAAA,MAA6CC,eAA7C,eAA6CA,eAA7C;AAAA,MAA8DC,WAA9D,eAA8DA,WAA9D;AAAA,MAA2EC,aAA3E,eAA2EA,aAA3E;AAAA,MAA0FC,gBAA1F,eAA0FA,gBAA1F;;AACA,MAAMC,QAAQ,GAAGJ,eAAe,CAACI,QAAjC;AACA,MAAMC,KAAK,GAAGL,eAAe,CAACK,KAA9B;;AACA,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAhB,GAAsB,CAAjC,CAAb;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,GAAG,CAA5B,EAA+BO,CAAC,EAAhC,EAAoC;AAChC,UAAIL,CAAC,CAACM,MAAF,CAASC,EAAT,IAAeN,MAAnB,EAA2B;AACvBO,QAAAA,YAAY,CAACC,IAAb,CAAkBtB,WAAW,EAA7B;AACH,OAFD,MAEO;AACHqB,QAAAA,YAAY,CAACC,IAAb,CAAkBrB,SAAS,EAA3B;AACH;AACJ;;AACDM,IAAAA,WAAW,CAAC,UAAAgB,IAAI,EAAI;AAChB,6CACOA,IADP;AAEIb,QAAAA,QAAQ,EAAE;AAFd;AAIH,KALU,CAAX;AAMH;;AAED,MAAI,CAACA,QAAL,EAAe;AACX,wBAAQ,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAGK;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,+BACI;AAAA,oBACKS;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAUH;AACJ;;GApCelB,U;;KAAAA,U","sourcesContent":["import { useContext } from \"react\";\r\nimport { GlobalState } from \"../../../../../global_states/global_state\";\r\nimport { GameEnd } from \"./gameEnd\";\r\nimport { GameStart } from \"./gameStart\";\r\nimport { WinningCard, BlankCard, JackPotCard } from \"../../../../../functions/createCards\";\r\n\r\n\r\nexport function GameScript() {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const gameOver = currentGameInfo.gameOver;\r\n    const level = currentGameInfo.level;\r\n    function checkCard(e) {\r\n        let winner = Math.floor(Math.random() * level*3);\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner) {\r\n                postCardsArr.push(WinningCard())\r\n            } else {\r\n                postCardsArr.push(BlankCard())\r\n            }\r\n        }\r\n        setGameInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                gameOver: true\r\n            }\r\n        })\r\n    }\r\n\r\n    if (!gameOver) {\r\n        return (<GameStart func={checkCard}/>)\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <h3>Choose the right card to move onto the next level!</h3>\r\n                <table className=\"cards\">\r\n                    <tr>\r\n                        {postCardsArr}\r\n                    </tr>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}