{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { ethers } from \"ethers\";\nimport { useContext } from \"react\";\nimport { GlobalState } from \"./global_state\";\nexport var useAccChange = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _s(_asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useContext, currentUserInfo, setCurrentUserInfo, currProvider, signer, signerAddress, updatedStates;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useContext = useContext(GlobalState), currentUserInfo = _useContext.currentUserInfo, setCurrentUserInfo = _useContext.setCurrentUserInfo;\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 5;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 5:\n            signer = currProvider.getSigner();\n            _context.next = 8;\n            return signer.getAddress();\n\n          case 8:\n            signerAddress = _context.sent;\n            updatedStates = {\n              provider: currProvider,\n              signer: signer,\n              signerAddress: signerAddress,\n              balance: \"-\"\n            };\n            setCurrentUserInfo(updatedStates);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"bE6/tZHQ9+QtIU1ZaUWzgeO9mMk=\")), \"bE6/tZHQ9+QtIU1ZaUWzgeO9mMk=\");\n\n  return function useAccChange() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/accChange.js"],"names":["ethers","useContext","GlobalState","useAccChange","currentUserInfo","setCurrentUserInfo","currProvider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","signerAddress","updatedStates","provider","balance"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAGA,OAAO,IAAMC,YAAY;AAAA;;AAAA,4EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0BACsBF,UAAU,CAACC,WAAD,CADhC,EACjBE,eADiB,eACjBA,eADiB,EACAC,kBADA,eACAA,kBADA;AAElBC,YAAAA,YAFkB,GAEH,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAFG;AAAA;AAAA,mBAGlBJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAHkB;;AAAA;AAIlBC,YAAAA,MAJkB,GAITN,YAAY,CAACO,SAAb,EAJS;AAAA;AAAA,mBAKID,MAAM,CAACE,UAAP,EALJ;;AAAA;AAKlBC,YAAAA,aALkB;AAOlBC,YAAAA,aAPkB,GAOF;AAClBC,cAAAA,QAAQ,EAAEX,YADQ;AAElBM,cAAAA,MAAM,EAAEA,MAFU;AAGlBG,cAAAA,aAAa,EAAEA,aAHG;AAIlBG,cAAAA,OAAO,EAAE;AAJS,aAPE;AAcxBb,YAAAA,kBAAkB,CAACW,aAAD,CAAlB;;AAdwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZb,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import { ethers } from \"ethers\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalState } from \"./global_state\";\r\n\r\n\r\nexport const useAccChange = async () => {\r\n    const {currentUserInfo, setCurrentUserInfo} = useContext(GlobalState);\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    const updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n    \r\n    setCurrentUserInfo(updatedStates);\r\n  };"]},"metadata":{},"sourceType":"module"}