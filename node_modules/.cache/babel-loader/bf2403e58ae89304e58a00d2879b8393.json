{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\functions\\\\createCards.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalState } from \"../global_states/global_state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WinningCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Correct Card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this)\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }, this);\n}\n_c = WinningCard;\nexport function CorrectCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This was the correct card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}\n_c2 = CorrectCard;\nexport function JackPotCard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: \"You Win!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n_c3 = JackPotCard;\nexport function GuessCard(ind) {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentUserInfo = _useContext.currentUserInfo,\n      setCurrentUserInfo = _useContext.setCurrentUserInfo,\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo,\n      accReqPending = _useContext.accReqPending,\n      setAccReqPending = _useContext.setAccReqPending;\n\n  var level = currentGameInfo.level;\n  var cards = currentGameInfo.cards;\n\n  function checkCard(e) {\n    var winner = Math.floor(Math.random() * level * 3);\n\n    for (var j = 0; j < level * 3; j++) {\n      if (e.target.id == winner && winner == j) {\n        cards.push(WinningCard(j));\n      } else if (winner == j) {\n        cards.push(CorrectCard(j));\n      } else if (e.target.id == j) {\n        cards.push(SelectedCard);\n      } else {\n        cards.push(BlankCard(j));\n      }\n    }\n\n    setGameInfo(function (prev) {\n      if (e.target.id == winner && level < 3) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cards: cards,\n          gameOver: true,\n          level: level + 1\n        });\n      } else if (e.target.id != winner) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cards: cards,\n          gameOver: true,\n          level: 0\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cards: cards,\n          gameOver: true\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    id: ind,\n    onClick: function onClick(e) {\n      return checkCard(e);\n    }\n  }, ind, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n}\n\n_s(GuessCard, \"zUcZH41FnGLkrcq7III3AquUkJU=\");\n\n_c4 = GuessCard;\nexport function SelectedCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected-card\"\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n}\n_c5 = SelectedCard;\nexport function BlankCard(j) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blank-card\"\n  }, j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }, this);\n}\n_c6 = BlankCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"WinningCard\");\n$RefreshReg$(_c2, \"CorrectCard\");\n$RefreshReg$(_c3, \"JackPotCard\");\n$RefreshReg$(_c4, \"GuessCard\");\n$RefreshReg$(_c5, \"SelectedCard\");\n$RefreshReg$(_c6, \"BlankCard\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/functions/createCards.js"],"names":["useContext","GlobalState","WinningCard","j","CorrectCard","JackPotCard","GuessCard","ind","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","level","cards","checkCard","e","winner","Math","floor","random","target","id","push","SelectedCard","BlankCard","prev","gameOver"],"mappings":"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","sourcesContent":["import { useContext } from \"react\"\r\nimport { GlobalState } from \"../global_states/global_state\"\r\n\r\n\r\nexport function WinningCard(j) {\r\n        return (\r\n                <div className=\"right-card\" key={j}>\r\n                    <p>Correct Card!</p>\r\n                </div>\r\n        )\r\n\r\n}\r\n\r\nexport function CorrectCard(j) {\r\n    return (\r\n            <div className=\"right-card\" key={j}>\r\n                <p>This was the correct card</p>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport function JackPotCard() {\r\n    return (\r\n            <div className=\"card\">\r\n                You Win!\r\n            </div>\r\n    )\r\n}\r\n\r\nexport function GuessCard(ind) {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const level = currentGameInfo.level;\r\n    var cards = currentGameInfo.cards;\r\n    function checkCard(e) {\r\n        let winner = Math.floor(Math.random() * level*3);\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner && winner == j) {\r\n                cards.push(WinningCard(j))\r\n            } else if (winner == j) {\r\n                cards.push(CorrectCard(j))\r\n            } else if (e.target.id == j) {\r\n                cards.push(SelectedCard);\r\n            } else {\r\n                cards.push(BlankCard(j))\r\n            }\r\n        }\r\n        setGameInfo(prev => {\r\n            if (e.target.id == winner && level < 3) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: level + 1\r\n                }\r\n            } else if (e.target.id != winner) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: 0\r\n                }\r\n            } else {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        \r\n            <div className=\"card\" id={ind} key={ind} onClick={(e) => checkCard(e)}>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport function SelectedCard(j) {\r\n    return (\r\n            <div className=\"selected-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport function BlankCard(j) {\r\n    return (\r\n            <div className=\"blank-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}