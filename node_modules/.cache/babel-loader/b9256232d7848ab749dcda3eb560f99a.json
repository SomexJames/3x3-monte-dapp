{"ast":null,"code":"import _slicedToArray from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\src\\\\components\\\\states.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { GlobalState } from \"./global_states/global_state\";\nimport { Pages } from \"./site_stuff/pages\";\nimport { OnConnect } from \"./updated_states\";\nimport { AccChange } from \"./accChange\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GlobalStates() {\n  _s();\n\n  return useContext(GlobalState);\n}\n\n_s(GlobalStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c = GlobalStates;\nexport function GlobalStateDefault(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState({\n    provider: \"-\",\n    signer: \"-\",\n    signerAddress: \"-\",\n    balance: \"-\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUserInfo = _useState2[0],\n      setCurrentUserInfo = _useState2[1];\n\n  var globalStateValue = useMemo(function () {\n    return {\n      currentUserInfo: currentUserInfo,\n      setCurrentUserInfo: setCurrentUserInfo\n    };\n  }, [currentUserInfo.signerAddress, currentUserInfo.provider, currentUserInfo.balance]); // console.log(currentUserInfo)\n\n  console.log(globalStateValue);\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: globalStateValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GlobalStateDefault, \"zG0py+iwHyiT57o1QAueutWDX/k=\");\n\n_c2 = GlobalStateDefault;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStates\");\n$RefreshReg$(_c2, \"GlobalStateDefault\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/states.js"],"names":["React","useState","useEffect","createContext","useContext","useMemo","GlobalState","Pages","OnConnect","AccChange","ethers","GlobalStates","GlobalStateDefault","children","provider","signer","signerAddress","balance","currentUserInfo","setCurrentUserInfo","globalStateValue","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEC,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC7B,SAAOP,UAAU,CAACE,WAAD,CAAjB;AACD;;GAFeK,Y;;KAAAA,Y;AAKjB,OAAO,SAASC,kBAAT,OAA2C;AAAA;;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAEhD,kBAA8CZ,QAAQ,CAAC;AACrDa,IAAAA,QAAQ,EAAE,GAD2C;AAErDC,IAAAA,MAAM,EAAE,GAF6C;AAGrDC,IAAAA,aAAa,EAAE,GAHsC;AAIrDC,IAAAA,OAAO,EAAE;AAJ4C,GAAD,CAAtD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AAOA,MAAMC,gBAAgB,GAAGf,OAAO,CAAC;AAAA,WAAO;AAAEa,MAAAA,eAAe,EAAfA,eAAF;AAAmBC,MAAAA,kBAAkB,EAAlBA;AAAnB,KAAP;AAAA,GAAD,EAAiD,CAAED,eAAe,CAACF,aAAlB,EAAiCE,eAAe,CAACJ,QAAjD,EAA2DI,eAAe,CAACD,OAA3E,CAAjD,CAAhC,CATgD,CAUhD;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,gBAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;IAnBeD,kB;;MAAAA,kB","sourcesContent":["import React from \"react\"\r\nimport { useState, useEffect, createContext } from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { GlobalState } from \"./global_states/global_state\";\r\nimport { Pages } from \"./site_stuff/pages\";\r\nimport { OnConnect } from \"./updated_states\";\r\nimport { AccChange } from \"./accChange\";\r\nimport { ethers } from \"ethers\";\r\n\r\n export function GlobalStates() {\r\n   return useContext(GlobalState);\r\n }\r\n\r\n\r\nexport function GlobalStateDefault({ children })  {\r\n  \r\n  const [currentUserInfo, setCurrentUserInfo] = useState({\r\n    provider: \"-\",\r\n    signer: \"-\",\r\n    signerAddress: \"-\",\r\n    balance: \"-\"\r\n  });\r\n\r\n  const globalStateValue = useMemo(() => ({ currentUserInfo, setCurrentUserInfo}), [ currentUserInfo.signerAddress, currentUserInfo.provider, currentUserInfo.balance])\r\n  // console.log(currentUserInfo)\r\n  console.log(globalStateValue)\r\n\r\n  return (\r\n    <GlobalState.Provider value={globalStateValue}>\r\n      {children}\r\n    </GlobalState.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}