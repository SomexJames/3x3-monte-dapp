{"ast":null,"code":"import _slicedToArray from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\states.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { GlobalState } from \"./global_states/global_state\";\nimport { Pages } from \"./site_stuff/pages\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GlobalStateDefault(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      accReqPending = _useState2[0],\n      setAccReqPending = _useState2[1];\n\n  var _useState3 = useState(function () {\n    return {\n      provider: \"-\",\n      signer: \"-\",\n      signerAddress: \"-\",\n      balance: \"-\",\n      erc20: \"-\",\n      contractAddress: \"0x30be8054D3995233dA793D5907aA42543Ea5320B\"\n    };\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUserInfo = _useState4[0],\n      setCurrentUserInfo = _useState4[1];\n\n  var _useState5 = useState(function () {\n    return {\n      deck: [],\n      level: 0,\n      dealer: null,\n      player: null,\n      inputValue: '',\n      currentBet: null,\n      gameOver: false,\n      message: null\n    };\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentGameInfo = _useState6[0],\n      setGameInfo = _useState6[1]; // useEffect(() => {\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  //   setCurrentUserInfo(prev => {return{...prev, provider}});\n  // }), [currentUserInfo.provider];\n  // useEffect(() => {\n  //   const signer = currentUserInfo.provider.getSigner();\n  //   const signerAddress = currentUserInfo.provider.getSigner().getAddress();\n  //   setCurrentUserInfo(prev => {return{...prev, signer, signerAddress}});\n  // }), [currentUserInfo.signer, currentUserInfo.signerAddress];\n  //   function Connect() {\n  //     const connectFunction = async () => {\n  //         const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  //         await currProvider.send(\"eth_requestAccounts\", []);\n  //         const signer = currProvider.getSigner();\n  //         const signerAddress = await signer.getAddress();\n  //         const updatedStates = {\n  //             provider: currProvider,\n  //             signer: signer,\n  //             signerAddress: signerAddress,\n  //             balance: \"-\"\n  //         }\n  //       setCurrentUserInfo(updatedStates);\n  //     }\n  //     connectFunction();\n  // }\n\n\n  var globalStateValue = useMemo(function () {\n    return {\n      currentUserInfo: currentUserInfo,\n      setCurrentUserInfo: setCurrentUserInfo,\n      currentGameInfo: currentGameInfo,\n      setGameInfo: setGameInfo,\n      accReqPending: accReqPending,\n      setAccReqPending: setAccReqPending\n    };\n  }); // console.log(currentUserInfo)\n\n  console.log(globalStateValue);\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: globalStateValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalStateDefault, \"EtgNDdiSoppJOCk75unTNeVtHvo=\");\n\n_c = GlobalStateDefault;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStateDefault\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/states.js"],"names":["React","useState","useEffect","createContext","useContext","useMemo","GlobalState","Pages","ethers","GlobalStateDefault","children","accReqPending","setAccReqPending","provider","signer","signerAddress","balance","erc20","contractAddress","currentUserInfo","setCurrentUserInfo","deck","level","dealer","player","inputValue","currentBet","gameOver","message","currentGameInfo","setGameInfo","globalStateValue","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,OAAO,SAASC,kBAAT,OAA2C;AAAA;;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAEhD,kBAA4CT,QAAQ,CAClD,IADkD,CAApD;AAAA;AAAA,MAAQU,aAAR;AAAA,MAAuBC,gBAAvB;;AAIA,mBAA8CX,QAAQ,CAAC,YAAM;AAC3D,WAAO;AACDY,MAAAA,QAAQ,EAAE,GADT;AAEDC,MAAAA,MAAM,EAAE,GAFP;AAGDC,MAAAA,aAAa,EAAE,GAHd;AAIDC,MAAAA,OAAO,EAAE,GAJR;AAKDC,MAAAA,KAAK,EAAE,GALN;AAMDC,MAAAA,eAAe,EAAE;AANhB,KAAP;AAQC,GATmD,CAAtD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AAYA,mBAAuCnB,QAAQ,CAAC,YAAM;AACpD,WAAO;AACCoB,MAAAA,IAAI,EAAE,EADP;AAECC,MAAAA,KAAK,EAAE,CAFR;AAGCC,MAAAA,MAAM,EAAE,IAHT;AAICC,MAAAA,MAAM,EAAE,IAJT;AAKCC,MAAAA,UAAU,EAAE,EALb;AAMCC,MAAAA,UAAU,EAAE,IANb;AAOCC,MAAAA,QAAQ,EAAE,KAPX;AAQCC,MAAAA,OAAO,EAAE;AARV,KAAP;AAUK,GAXwC,CAA/C;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,WAAxB,iBAlBgD,CAkChD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEE,MAAMC,gBAAgB,GAAG1B,OAAO,CAAC;AAAA,WAAO;AAAEc,MAAAA,eAAe,EAAfA,eAAF;AAAmBC,MAAAA,kBAAkB,EAAlBA,kBAAnB;AAAuCS,MAAAA,eAAe,EAAfA,eAAvC;AAAwDC,MAAAA,WAAW,EAAXA,WAAxD;AAAqEnB,MAAAA,aAAa,EAAbA,aAArE;AAAoFC,MAAAA,gBAAgB,EAAhBA;AAApF,KAAP;AAAA,GAAD,CAAhC,CAhEgD,CAiEhD;;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,gBAA7B;AAAA,cACGrB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1EeD,kB;;KAAAA,kB","sourcesContent":["import React from \"react\"\r\nimport { useState, useEffect, createContext } from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { GlobalState } from \"./global_states/global_state\";\r\nimport { Pages } from \"./site_stuff/pages\";\r\nimport { ethers } from \"ethers\";\r\n\r\n\r\nexport function GlobalStateDefault({ children })  {\r\n\r\n  const [ accReqPending, setAccReqPending ] = useState(\r\n    null\r\n  );\r\n\r\n  const [currentUserInfo, setCurrentUserInfo] = useState(() => {\r\n    return {\r\n          provider: \"-\",\r\n          signer: \"-\",\r\n          signerAddress: \"-\",\r\n          balance: \"-\",\r\n          erc20: \"-\",\r\n          contractAddress: \"0x30be8054D3995233dA793D5907aA42543Ea5320B\"\r\n        }\r\n    }\r\n  );\r\n\r\n  const [currentGameInfo, setGameInfo] = useState(() => {\r\n    return {\r\n            deck: [],\r\n            level: 0,\r\n            dealer: null,\r\n            player: null,\r\n            inputValue: '',\r\n            currentBet: null,\r\n            gameOver: false,\r\n            message: null\r\n          }\r\n        }\r\n      );\r\n\r\n    \r\n\r\n  // useEffect(() => {\r\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n  //   setCurrentUserInfo(prev => {return{...prev, provider}});\r\n  // }), [currentUserInfo.provider];\r\n\r\n  // useEffect(() => {\r\n  //   const signer = currentUserInfo.provider.getSigner();\r\n  //   const signerAddress = currentUserInfo.provider.getSigner().getAddress();\r\n  //   setCurrentUserInfo(prev => {return{...prev, signer, signerAddress}});\r\n  // }), [currentUserInfo.signer, currentUserInfo.signerAddress];\r\n\r\n//   function Connect() {\r\n//     const connectFunction = async () => {\r\n//         const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n//         await currProvider.send(\"eth_requestAccounts\", []);\r\n//         const signer = currProvider.getSigner();\r\n//         const signerAddress = await signer.getAddress();\r\n\r\n//         const updatedStates = {\r\n//             provider: currProvider,\r\n//             signer: signer,\r\n//             signerAddress: signerAddress,\r\n//             balance: \"-\"\r\n//         }\r\n    \r\n//       setCurrentUserInfo(updatedStates);\r\n//     }\r\n//     connectFunction();\r\n// }\r\n\r\n  const globalStateValue = useMemo(() => ({ currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending}));\r\n  // console.log(currentUserInfo)\r\n  console.log(globalStateValue)\r\n\r\n  return (\r\n    <GlobalState.Provider value={globalStateValue}>\r\n      {children}\r\n    </GlobalState.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}