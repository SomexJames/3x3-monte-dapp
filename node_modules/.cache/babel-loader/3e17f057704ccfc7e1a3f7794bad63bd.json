{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/Users/Brandon/Projects/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Brandon/Projects/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Brandon/Projects/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Brandon/Projects/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Coder } from \"./abstract-coder\"; // Clones the functionality of an existing Coder, but without a localName\n\nexport var AnonymousCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(AnonymousCoder, _Coder);\n\n  var _super = _createSuper(AnonymousCoder);\n\n  function AnonymousCoder(coder) {\n    var _this;\n\n    _classCallCheck(this, AnonymousCoder);\n\n    _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic);\n    _this.coder = coder;\n    return _this;\n  }\n\n  _createClass(AnonymousCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return this.coder.defaultValue();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return this.coder.encode(writer, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return this.coder.decode(reader);\n    }\n  }]);\n\n  return AnonymousCoder;\n}(Coder);","map":{"version":3,"mappings":"AAAA;;;;;;AAEA,SAASA,KAAT,QAAsC,kBAAtC,C,CAEA;;AACA,WAAaC,cAAb;AAAA;;AAAA;;AAGI,0BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAK,CAACC,IAAZ,EAAkBD,KAAK,CAACE,IAAxB,EAA8BC,SAA9B,EAAyCH,KAAK,CAACI,OAA/C;AACA,UAAKJ,KAAL,GAAaA,KAAb;AAFoB;AAGvB;;AANL;AAAA;AAAA,WAQI,wBAAY;AACR,aAAO,KAAKA,KAAL,CAAWK,YAAX,EAAP;AACH;AAVL;AAAA;AAAA,WAYI,gBAAOC,MAAP,EAAuBC,KAAvB,EAAiC;AAC7B,aAAO,KAAKP,KAAL,CAAWQ,MAAX,CAAkBF,MAAlB,EAA0BC,KAA1B,CAAP;AACH;AAdL;AAAA;AAAA,WAgBI,gBAAOE,MAAP,EAAqB;AACjB,aAAO,KAAKT,KAAL,CAAWU,MAAX,CAAkBD,MAAlB,CAAP;AACH;AAlBL;;AAAA;AAAA,EAAoCX,KAApC","names":["Coder","AnonymousCoder","coder","name","type","undefined","dynamic","defaultValue","writer","value","encode","reader","decode"],"sources":["C:\\Users\\Brandon\\Projects\\3x3-monte-dapp\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\anonymous.ts"],"sourcesContent":["\"use strict\";\r\n\r\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\r\n\r\n// Clones the functionality of an existing Coder, but without a localName\r\nexport class AnonymousCoder extends Coder {\r\n    private coder: Coder;\r\n\r\n    constructor(coder: Coder) {\r\n        super(coder.name, coder.type, undefined, coder.dynamic);\r\n        this.coder = coder;\r\n    }\r\n\r\n    defaultValue(): any {\r\n        return this.coder.defaultValue();\r\n    }\r\n\r\n    encode(writer: Writer, value: any): number {\r\n        return this.coder.encode(writer, value);\r\n    }\r\n\r\n    decode(reader: Reader): any {\r\n        return this.coder.decode(reader);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}