{"ast":null,"code":"import _objectSpread from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\src\\\\components\\\\HTML\\\\elements\\\\cardDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport { GlobalState } from \"../../global_states/global_state\";\nimport { WinningCard, JackpotCard, GuessCard, BlankCard } from \"./createCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Cards() {\n  _s();\n\n  var _useContext = useContext(GlobalState),\n      currentUserInfo = _useContext.currentUserInfo,\n      setCurrentUserInfo = _useContext.setCurrentUserInfo,\n      currentGameInfo = _useContext.currentGameInfo,\n      setGameInfo = _useContext.setGameInfo,\n      accReqPending = _useContext.accReqPending,\n      setAccReqPending = _useContext.setAccReqPending;\n\n  var level = currentGameInfo.level;\n  var gameOver = currentGameInfo.gameOver;\n  console.log(\"cards just ran\");\n  var cardsArr = [];\n  useEffect(function () {}, [currentGameInfo.gameOver]);\n\n  if (!gameOver) {\n    for (var i = 0; i < level * 3; i++) {\n      cardsArr.push(GuessCard(i, checkCard));\n    }\n  }\n\n  function checkCard(e) {\n    console.log(\"checkCard just ran\");\n    console.log(e);\n    console.log(e.target.id);\n    var winner = Math.floor(Math.random() * level * 3);\n    cardsArr = [];\n\n    for (var j = 0; j < level * 3; j++) {\n      if (e.target.id == winner) {\n        cardsArr.push(WinningCard());\n      } else {\n        cardsArr.push(BlankCard());\n      }\n    }\n\n    console.log(cardsArr);\n    setGameInfo(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        gameOver: true\n      });\n    });\n  }\n\n  console.log(cardsArr);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose the right card to move onto the next level!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cardsArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cards, \"E+cbNEVS471S3hCTYGRb1r9AhpI=\");\n\n_c = Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/HTML/elements/cardDisplay.js"],"names":["useContext","useEffect","GlobalState","WinningCard","JackpotCard","GuessCard","BlankCard","Cards","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","level","gameOver","console","log","cardsArr","i","push","checkCard","e","target","id","winner","Math","floor","random","j","prev"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,SAA9C,QAA+D,eAA/D;;;AAIA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACpB,oBAA8GP,UAAU,CAACE,WAAD,CAAxH;AAAA,MAAQM,eAAR,eAAQA,eAAR;AAAA,MAAyBC,kBAAzB,eAAyBA,kBAAzB;AAAA,MAA6CC,eAA7C,eAA6CA,eAA7C;AAAA,MAA8DC,WAA9D,eAA8DA,WAA9D;AAAA,MAA2EC,aAA3E,eAA2EA,aAA3E;AAAA,MAA0FC,gBAA1F,eAA0FA,gBAA1F;;AACA,MAAMC,KAAK,GAAGJ,eAAe,CAACI,KAA9B;AACA,MAAMC,QAAQ,GAAGL,eAAe,CAACK,QAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAjB,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,EAEN,CAACS,eAAe,CAACK,QAAjB,CAFM,CAAT;;AAIA,MAAI,CAACA,QAAL,EAAe;AACX,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,GAAC,CAA1B,EAA6BK,CAAC,EAA9B,EAAkC;AAC9BD,MAAAA,QAAQ,CAACE,IAAT,CAAcf,SAAS,CAACc,CAAD,EAAIE,SAAJ,CAAvB;AACH;AACJ;;AAED,WAASA,SAAT,CAAmBC,CAAnB,EAAsB;AAClBN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,EAArB;AAEA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,KAAhB,GAAsB,CAAjC,CAAb;AACAI,IAAAA,QAAQ,GAAG,EAAX;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,GAAG,CAA5B,EAA+Be,CAAC,EAAhC,EAAoC;AAChC,UAAIP,CAAC,CAACC,MAAF,CAASC,EAAT,IAAeC,MAAnB,EAA2B;AACvBP,QAAAA,QAAQ,CAACE,IAAT,CAAcjB,WAAW,EAAzB;AACH,OAFD,MAEO;AACHe,QAAAA,QAAQ,CAACE,IAAT,CAAcd,SAAS,EAAvB;AACH;AACJ;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAP,IAAAA,WAAW,CAAC,UAAAmB,IAAI,EAAI;AAChB,6CACOA,IADP;AAEIf,QAAAA,QAAQ,EAAE;AAFd;AAIH,KALU,CAAX;AAOH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,6BACI;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH;;GArDeX,K;;KAAAA,K","sourcesContent":["import { useContext, useEffect } from \"react\"\r\nimport { GlobalState } from \"../../global_states/global_state\"\r\nimport { WinningCard, JackpotCard, GuessCard, BlankCard } from \"./createCards\";\r\n\r\n\r\n\r\nexport function Cards() {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const level = currentGameInfo.level;\r\n    const gameOver = currentGameInfo.gameOver;\r\n    console.log(\"cards just ran\");\r\n    var cardsArr = [];\r\n    useEffect(() => {\r\n\r\n    }, [currentGameInfo.gameOver])\r\n\r\n    if (!gameOver) {\r\n        for (let i = 0; i < level*3; i++) {\r\n            cardsArr.push(GuessCard(i, checkCard))\r\n        }\r\n    }\r\n\r\n    function checkCard(e) {\r\n        console.log(\"checkCard just ran\");\r\n        console.log(e);\r\n        console.log(e.target.id);\r\n        \r\n        let winner = Math.floor(Math.random() * level*3);\r\n        cardsArr = [];\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner) {\r\n                cardsArr.push(WinningCard())\r\n            } else {\r\n                cardsArr.push(BlankCard())\r\n            }\r\n        }\r\n        console.log(cardsArr);\r\n        setGameInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                gameOver: true\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    console.log(cardsArr);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Choose the right card to move onto the next level!</h3>\r\n            <table className=\"cards\">\r\n                <tr>\r\n                    {cardsArr}\r\n                </tr>\r\n            </table>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}