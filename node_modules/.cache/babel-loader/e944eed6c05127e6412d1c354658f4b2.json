{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Projects\\\\3x3-monte-dapp\\\\src\\\\components\\\\pages\\\\start_page_comp\\\\base_selector_comp\\\\game_selector_comp\\\\pregame_comp\\\\buy.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { GlobalState } from \"../../../../../global_states/global_state\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Buy() {\n  _s();\n  const {\n    currentUserInfo,\n    setCurrentUserInfo,\n    currentGameInfo,\n    setGameInfo,\n    accReqPending,\n    setAccReqPending\n  } = useContext(GlobalState);\n  const [value, setValue] = useState({\n    inputValue: \"\"\n  });\n  const provider = currentUserInfo.provider;\n  const updateBalance = currentUserInfo.updateBalance;\n  const signer = currentUserInfo.signer;\n  const signerAddress = currentUserInfo.signerAddress;\n  const contractAddress = currentUserInfo.contractAddress;\n  const erc20 = currentUserInfo.erc20;\n  useEffect(() => {\n    var value = value;\n  }, [value.inputValue]);\n  const updateValue = e => {\n    setValue(prev => {\n      return {\n        ...prev,\n        inputValue: e.target.value\n      };\n    });\n  };\n  const placeOrder = async e => {\n    e.preventDefault();\n    const buySize = value.inputValue;\n    await erc20.connect(signer).exchange({\n      value: ethers.utils.parseEther(String(buySize / 5000))\n    }).catch(e => e.code == \"INSUFFICIENT_FUNDS\" ? alert(\"MetaMask says: INSUFFICENT FUNDS\") : alert(e));\n    setCurrentUserInfo(prev => {\n      return {\n        ...prev,\n        updateBalance: updateBalance + 1\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"0.1 ETH = 500 KBUX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: placeOrder,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter here to buy\",\n        value: value.inputValue,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: placeOrder,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Estimated total: \", value.inputValue / 5000, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Buy, \"aZfdfdw6zwYf6ymdeoYAz+WW4hY=\");\n_c = Buy;\nvar _c;\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"names":["useState","useEffect","useContext","GlobalState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","Buy","_s","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","value","setValue","inputValue","provider","updateBalance","signer","signerAddress","contractAddress","erc20","updateValue","e","prev","target","placeOrder","preventDefault","buySize","connect","exchange","utils","parseEther","String","catch","code","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/pages/start_page_comp/base_selector_comp/game_selector_comp/pregame_comp/buy.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\"\r\nimport { GlobalState } from \"../../../../../global_states/global_state\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport function Buy() {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending } = useContext(GlobalState);\r\n    const [value, setValue] = useState({inputValue: \"\"});\r\n    const provider = currentUserInfo.provider;\r\n    const updateBalance = currentUserInfo.updateBalance;\r\n    const signer = currentUserInfo.signer;\r\n    const signerAddress = currentUserInfo.signerAddress;\r\n    const contractAddress = currentUserInfo.contractAddress;\r\n    const erc20 = currentUserInfo.erc20;\r\n    \r\n    useEffect(() => {\r\n        var value = value;\r\n    },[value.inputValue])\r\n\r\n    const updateValue = (e) => {\r\n        setValue(prev => {\r\n            return {\r\n                ...prev,\r\n                inputValue: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const placeOrder = async (e) => {\r\n        e.preventDefault();\r\n        const buySize = value.inputValue;\r\n\r\n        await erc20\r\n            .connect(signer)\r\n            .exchange({value: ethers.utils.parseEther(String(buySize/5000))})\r\n            .catch(e => e.code == \"INSUFFICIENT_FUNDS\" ? alert(\"MetaMask says: INSUFFICENT FUNDS\") : alert(e));\r\n            \r\n        setCurrentUserInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                updateBalance: updateBalance + 1\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>0.1 ETH = 500 KBUX</p>\r\n            <form onSubmit={placeOrder}>\r\n                <input type=\"text\" placeholder=\"enter here to buy\" value={value.inputValue} onChange={updateValue}/>\r\n                <button onClick={placeOrder}>Buy</button>\r\n            </form>\r\n            <p>Estimated total: {value.inputValue/5000} ETH</p>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}