{"ast":null,"code":"import _objectSpread from\"C:/Users/Brandon/Projects/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useContext}from\"react\";import{GlobalState}from\"../global_states/global_state\";import{jsx as _jsx}from\"react/jsx-runtime\";export function WinningCard(j){return/*#__PURE__*/_jsx(\"div\",{className:\"right-card\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Correct Card!\"})},j);}export function CorrectCard(j){return/*#__PURE__*/_jsx(\"div\",{className:\"right-card\",children:/*#__PURE__*/_jsx(\"p\",{children:\"This was the correct card\"})},j);}export function JackPotCard(){return/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:\"You Win!\"});}export function GuessCard(ind){var _useContext=useContext(GlobalState),currentUserInfo=_useContext.currentUserInfo,setCurrentUserInfo=_useContext.setCurrentUserInfo,currentGameInfo=_useContext.currentGameInfo,setGameInfo=_useContext.setGameInfo,accReqPending=_useContext.accReqPending,setAccReqPending=_useContext.setAccReqPending;var level=currentGameInfo.level;var cards=currentGameInfo.cards;function checkCard(e){var winner=Math.floor(Math.random()*level*3);for(var j=0;j<level*3;j++){if(e.target.id==winner&&winner==j){cards.push(WinningCard(j));}else if(winner==j){cards.push(CorrectCard(j));}else if(e.target.id==j){cards.push(SelectedCard(j));}else{cards.push(BlankCard(j));}}setGameInfo(function(prev){if(e.target.id==winner&&level<=3){return _objectSpread(_objectSpread({},prev),{},{cards:cards,gameOver:true,level:level+1});}else if(e.target.id!=winner){return _objectSpread(_objectSpread({},prev),{},{cards:cards,gameOver:true,level:0});}else{return _objectSpread(_objectSpread({},prev),{},{cards:cards,gameOver:true});}});}return/*#__PURE__*/_jsx(\"div\",{className:\"card\",id:ind,onClick:function onClick(e){return checkCard(e);}},ind);}export function SelectedCard(j){return/*#__PURE__*/_jsx(\"div\",{className:\"selected-card\"},j);}export function BlankCard(j){return/*#__PURE__*/_jsx(\"div\",{className:\"blank-card\"},j);}","map":{"version":3,"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/functions/createCards.js"],"names":["useContext","GlobalState","WinningCard","j","CorrectCard","JackPotCard","GuessCard","ind","currentUserInfo","setCurrentUserInfo","currentGameInfo","setGameInfo","accReqPending","setAccReqPending","level","cards","checkCard","e","winner","Math","floor","random","target","id","push","SelectedCard","BlankCard","prev","gameOver"],"mappings":"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","sourcesContent":["import { useContext } from \"react\"\r\nimport { GlobalState } from \"../global_states/global_state\"\r\n\r\n\r\nexport function WinningCard(j) {\r\n        return (\r\n                <div className=\"right-card\" key={j}>\r\n                    <p>Correct Card!</p>\r\n                </div>\r\n        )\r\n\r\n}\r\n\r\nexport function CorrectCard(j) {\r\n    return (\r\n            <div className=\"right-card\" key={j}>\r\n                <p>This was the correct card</p>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport function JackPotCard() {\r\n    return (\r\n            <div className=\"card\">\r\n                You Win!\r\n            </div>\r\n    )\r\n}\r\n\r\nexport function GuessCard(ind) {\r\n    const { currentUserInfo, setCurrentUserInfo, currentGameInfo, setGameInfo, accReqPending, setAccReqPending} = useContext(GlobalState);\r\n    const level = currentGameInfo.level;\r\n    var cards = currentGameInfo.cards;\r\n    function checkCard(e) {\r\n        let winner = Math.floor(Math.random() * level*3);\r\n        for (let j = 0; j < level * 3; j++) {\r\n            if (e.target.id == winner && winner == j) {\r\n                cards.push(WinningCard(j))\r\n            } else if (winner == j) {\r\n                cards.push(CorrectCard(j))\r\n            } else if (e.target.id == j) {\r\n                cards.push(SelectedCard(j));\r\n            } else {\r\n                cards.push(BlankCard(j))\r\n            }\r\n        }\r\n        setGameInfo(prev => {\r\n            if (e.target.id == winner && level <= 3) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: level + 1\r\n                }\r\n            } else if (e.target.id != winner) {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true,\r\n                    level: 0\r\n                }\r\n            } else {\r\n                return {\r\n                    ...prev,\r\n                    cards,\r\n                    gameOver: true\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        \r\n            <div className=\"card\" id={ind} key={ind} onClick={(e) => checkCard(e)}>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport function SelectedCard(j) {\r\n    return (\r\n            <div className=\"selected-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport function BlankCard(j) {\r\n    return (\r\n            <div className=\"blank-card\" key={j}>\r\n                \r\n            </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}