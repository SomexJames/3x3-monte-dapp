{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { GlobalStatesProvider, GlobalStates, setCurrentUserInfo } from \"./states\";\nexport function updatedStates() {\n  _s();\n\n  var currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  currProvInfo = currProvider.send(\"eth_requestAccounts\", []);\n  var signer = currProvInfo.getSigner();\n  var signerAddress = signer.getAddress();\n  origStates = useContext(GlobalStates);\n  updatedStates = {\n    provider: currProvider,\n    signer: signer,\n    signerAddress: signerAddress,\n    balance: \"-\"\n  };\n  return origStates.setCurrentUserInfo(updatedStates);\n}\n\n_s(updatedStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/updated_states.js"],"names":["useState","useEffect","useContext","ethers","GlobalStatesProvider","GlobalStates","setCurrentUserInfo","updatedStates","currProvider","providers","Web3Provider","window","ethereum","currProvInfo","send","signer","getSigner","signerAddress","getAddress","origStates","provider","balance"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,oBAAT,EAA+BC,YAA/B,EAA6CC,kBAA7C,QAAuE,UAAvE;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,MAAMC,YAAY,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAArB;AACAC,EAAAA,YAAY,GAAGL,YAAY,CAACM,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAAf;AACA,MAAMC,MAAM,GAAGF,YAAY,CAACG,SAAb,EAAf;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,UAAP,EAAtB;AAEAC,EAAAA,UAAU,GAAGjB,UAAU,CAACG,YAAD,CAAvB;AACAE,EAAAA,aAAa,GAAG;AACZa,IAAAA,QAAQ,EAAEZ,YADE;AAEZO,IAAAA,MAAM,EAAEA,MAFI;AAGZE,IAAAA,aAAa,EAAEA,aAHH;AAIZI,IAAAA,OAAO,EAAE;AAJG,GAAhB;AAQA,SACIF,UAAU,CAACb,kBAAX,CAA8BC,aAA9B,CADJ;AAIH;;GAnBeA,a","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { GlobalStatesProvider, GlobalStates, setCurrentUserInfo } from \"./states\";\r\n\r\nexport function updatedStates() {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    currProvInfo = currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvInfo.getSigner();\r\n    const signerAddress = signer.getAddress();\r\n\r\n    origStates = useContext(GlobalStates);\r\n    updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n    \r\n\r\n    return (\r\n        origStates.setCurrentUserInfo(updatedStates)\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}