{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\FIN 6392 G3 P2 Workspace\\\\3x3-monte-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useContext } from \"react\";\nimport { GlobalState } from \"./global_states/global_state\";\nimport { ethers } from \"ethers\";\nimport { StartPage } from \"./StartPage\";\nexport var handleEthAccReq = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, _ethReqP;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 3;\n            return currProvider.send(\"eth_requestAccounts\", []).catch(function (e) {\n              return e.code === -32002 ? false : console.log(e);\n            });\n\n          case 3:\n            _ethReqP = _context.sent;\n            return _context.abrupt(\"return\", _ethReqP);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function handleEthAccReq() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/FIN 6392 G3 P2 Workspace/3x3-monte-dapp/src/components/handleEthAccReq.js"],"names":["useContext","GlobalState","ethers","StartPage","handleEthAccReq","currProvider","providers","Web3Provider","window","ethereum","send","catch","e","code","console","log","_ethReqP"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,IAAMC,eAAe;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,YADqB,GACN,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CADM;AAAA;AAAA,mBAEJJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,EAA6CC,KAA7C,CAAmD,UAAAC,CAAC;AAAA,qBACvEA,CAAC,CAACC,IAAF,KAAW,CAAC,KAAZ,GACI,KADJ,GAEIC,OAAO,CAACC,GAAR,CAAYH,CAAZ,CAHmE;AAAA,aAApD,CAFI;;AAAA;AAErBI,YAAAA,QAFqB;AAAA,6CAQpBA,QARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfZ,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { useContext } from \"react\"\r\nimport { GlobalState } from \"./global_states/global_state\";\r\nimport { ethers } from \"ethers\";\r\nimport { StartPage } from \"./StartPage\";\r\n\r\n\r\nexport const handleEthAccReq = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    const _ethReqP = await currProvider.send(\"eth_requestAccounts\", []).catch(e => \r\n        e.code === -32002 ? \r\n            false :\r\n            console.log(e)\r\n    );\r\n    \r\n    return _ethReqP\r\n}"]},"metadata":{},"sourceType":"module"}