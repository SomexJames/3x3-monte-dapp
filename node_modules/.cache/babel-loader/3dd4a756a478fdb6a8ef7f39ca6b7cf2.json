{"ast":null,"code":"import{ethers}from\"ethers\";export const handleEthAccReq=async()=>{const currProvider=new ethers.providers.Web3Provider(window.ethereum,\"any\");const _ethReqP=await currProvider.send(\"eth_requestAccounts\",[]).catch(e=>e.code===-32002?false:console.log(e));return _ethReqP;};","map":{"version":3,"names":["ethers","handleEthAccReq","currProvider","providers","Web3Provider","window","ethereum","_ethReqP","send","catch","e","code","console","log"],"sources":["C:/Users/Brandon/Projects/3x3-monte-dapp/src/components/functions/handleEthAccReq.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\n\r\n\r\nexport const handleEthAccReq = async () => {\r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    const _ethReqP = await currProvider.send(\"eth_requestAccounts\", []).catch(e => \r\n        e.code === -32002 ? \r\n            false :\r\n            console.log(e)\r\n    );\r\n    \r\n    return _ethReqP\r\n}"],"mappings":"AAAA,OAASA,MAAM,KAAQ,QAAQ,CAI/B,MAAO,MAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CACvC,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAE,KAAK,CAAC,CAC9E,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,YAAY,CAACM,IAAI,CAAC,qBAAqB,CAAE,EAAE,CAAC,CAACC,KAAK,CAACC,CAAC,EACvEA,CAAC,CAACC,IAAI,GAAK,CAAC,KAAK,CACb,KAAK,CACLC,OAAO,CAACC,GAAG,CAACH,CAAC,CACrB,CAAC,CAED,MAAO,CAAAH,QAAQ,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}