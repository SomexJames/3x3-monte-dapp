{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Brandon/Desktop/blackjack-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\blackjack-dapp\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { ethers } from \"ethers\";\nimport { useContext } from \"react\";\nimport { GlobalState } from \"./global_state\";\n\nvar _useContext = useContext(GlobalState),\n    currentUserInfo = _useContext.currentUserInfo,\n    setCurrentUserInfo = _useContext.setCurrentUserInfo;\n\nexport var AccChange = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currProvider, signer, signerAddress, updatedStates;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            _context.next = 3;\n            return currProvider.send(\"eth_requestAccounts\", []);\n\n          case 3:\n            signer = currProvider.getSigner();\n            _context.next = 6;\n            return signer.getAddress();\n\n          case 6:\n            signerAddress = _context.sent;\n            updatedStates = {\n              provider: currProvider,\n              signer: signer,\n              signerAddress: signerAddress,\n              balance: \"-\"\n            };\n            setCurrentUserInfo(updatedStates);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function AccChange() {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = AccChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccChange\");","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/blackjack-dapp/src/components/accChange.js"],"names":["ethers","useContext","GlobalState","currentUserInfo","setCurrentUserInfo","AccChange","currProvider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","signerAddress","updatedStates","provider","balance"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AACA,kBAA8CD,UAAU,CAACC,WAAD,CAAxD;AAAA,IAAOC,eAAP,eAAOA,eAAP;AAAA,IAAwBC,kBAAxB,eAAwBA,kBAAxB;;AAEA,OAAO,IAAMC,SAAS;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,YAFe,GAEA,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAFA;AAAA;AAAA,mBAGfJ,YAAY,CAACK,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,CAHe;;AAAA;AAIfC,YAAAA,MAJe,GAINN,YAAY,CAACO,SAAb,EAJM;AAAA;AAAA,mBAKOD,MAAM,CAACE,UAAP,EALP;;AAAA;AAKfC,YAAAA,aALe;AAOfC,YAAAA,aAPe,GAOC;AAClBC,cAAAA,QAAQ,EAAEX,YADQ;AAElBM,cAAAA,MAAM,EAAEA,MAFU;AAGlBG,cAAAA,aAAa,EAAEA,aAHG;AAIlBG,cAAAA,OAAO,EAAE;AAJS,aAPD;AAcrBd,YAAAA,kBAAkB,CAACY,aAAD,CAAlB;;AAdqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATX,SAAS;AAAA;AAAA;AAAA,GAAf;KAAMA,S","sourcesContent":["import { ethers } from \"ethers\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalState } from \"./global_state\";\r\nconst {currentUserInfo, setCurrentUserInfo} = useContext(GlobalState);\r\n\r\nexport const AccChange = async () => {\r\n    \r\n    const currProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    await currProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = currProvider.getSigner();\r\n    const signerAddress = await signer.getAddress();\r\n\r\n    const updatedStates = {\r\n        provider: currProvider,\r\n        signer: signer,\r\n        signerAddress: signerAddress,\r\n        balance: \"-\"\r\n    }\r\n    \r\n    setCurrentUserInfo(updatedStates);\r\n  };"]},"metadata":{},"sourceType":"module"}